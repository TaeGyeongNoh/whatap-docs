"use strict";
(self["webpackChunkWhaTap_Docs"] = self["webpackChunkWhaTap_Docs"] || []).push([[64313],{

/***/ 79625:
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"tag":{"label":"Node.js","permalink":"/en/tags/node-js","allTagsPath":"/en/tags","count":74,"items":[{"id":"nodejs/dashboard-active-transaction","title":"Active Transaction","description":"You can quickly recognize abnormal transactions by using URLs, SQLs, and HTTP calls of the active transactions, and can analyze the delayed sections in detail through the transaction trace details.","permalink":"/en/nodejs/dashboard-active-transaction"},{"id":"nodejs/topology-add-function","title":"Additional options","description":"It describes additional functions available in the Topology menu.","permalink":"/en/nodejs/topology-add-function"},{"id":"nodejs/agent-network","title":"Agent communication settings","description":"It describes the connection settings between the agent and the server.","permalink":"/en/nodejs/agent-network"},{"id":"nodejs/agent-log","title":"Agent log configuration","description":"The options of the agent log can be set.","permalink":"/en/nodejs/agent-log"},{"id":"nodejs/agent-name","title":"Agent name identification","description":"The following explains how to set the agent name in order to identify the monitoring target.","permalink":"/en/nodejs/agent-name"},{"id":"nodejs/hitmap-notice","title":"AI-powered hitmap pattern alerts","description":"Alerts are sent automatically after recognizing application execution distribution patterns through machine learning.","permalink":"/en/nodejs/hitmap-notice"},{"id":"nodejs/set-receive-event","title":"Alert Notification Settings","description":"You can set various functions related to reception of alerts by project members.","permalink":"/en/nodejs/set-receive-event"},{"id":"nodejs/analysis-report-intro","title":"Analysis","description":"You can analyze the application performance in the Node.js environment and respond to any issues that may happen.","permalink":"/en/nodejs/analysis-report-intro"},{"id":"nodejs/trs-view","title":"Analyzing the transactions","description":"It guides you to the transaction-related menus.","permalink":"/en/nodejs/trs-view"},{"id":"nodejs/set-event-detect-anomal","title":"Anomaly detection alert","description":"Alerts can be set to detect a series of behaviors looking for unexpected patterns.","permalink":"/en/nodejs/set-event-detect-anomal"},{"id":"kubernetes/install-application-agent","title":"Application Agent Installation","description":"Agent installation steps to monitor applications such as Java, Python, and Node.js in containers.","permalink":"/en/kubernetes/install-application-agent"},{"id":"nodejs/warning-notice","title":"Application alert","description":"Alerts are sent through the resource usage, active transactions, and event conditions of error conditions of the application.","permalink":"/en/nodejs/warning-notice"},{"id":"nodejs/dashboard","title":"Application Dashboard","description":"You can monitor resources of your web application server in real time.","permalink":"/en/nodejs/dashboard"},{"id":"nodejs/metrics-app","title":"Application metrics","description":"It describes the application metrics.","permalink":"/en/nodejs/metrics-app"},{"id":"nodejs/flexboard-template","title":"Application of the template","description":"The following guides you to the preset templates that help you quickly build custom dashboards on Flex Board. You can easily perform initial configuration and change the settings. From selecting a template to naming it, adjusting its layout, and saving the settings, you can effectively create monitoring dashboards.","permalink":"/en/nodejs/flexboard-template"},{"id":"nodejs/metrics-performance-counter","title":"Application performance counter","description":"It guides you to the performance counter.","permalink":"/en/nodejs/metrics-performance-counter"},{"id":"nodejs/report-apm","title":"Application report","description":"The following provides the reports on the key performances for applications.","permalink":"/en/nodejs/report-apm"},{"id":"nodejs/topology-basic","title":"Basic usage","description":"Let\'s learn the basic operations in the topology menu.","permalink":"/en/nodejs/topology-basic"},{"id":"nodejs/agent-control-function","title":"Control of agent functions","description":"The Node.js application server\'s functions can be controlled.","permalink":"/en/nodejs/agent-control-function"},{"id":"nodejs/flexboard-create","title":"Creating the Flex board","description":"The following explains how to create a dashboard from the Flex Board menu and place widgets to create a custom dashboard. You can select the fixed layout or responsive layout, add metric widgets, and use predefined widget templates. You can reposition and resize widgets to create your own dashboard layout.","permalink":"/en/nodejs/flexboard-create"},{"id":"nodejs/cube","title":"CUBE","description":"It guides you to the cube analysis.","permalink":"/en/nodejs/cube"},{"id":"nodejs/application-daily-stat","title":"Daily Application Status","description":"You can check the status of key daily metrics by the time zone for applications in the Node.js environment.","permalink":"/en/nodejs/application-daily-stat"},{"id":"nodejs/dashboard-intro","title":"Dashboard","description":"The WhaTap monitoring dashboard provides functions to understand the overall status of a project at a glance.","permalink":"/en/nodejs/dashboard-intro"},{"id":"nodejs/agent-dbsql","title":"DB, SQL","description":"The following provides the options related to the Node.js agent DB and SQL.","permalink":"/en/nodejs/agent-dbsql"},{"id":"nodejs/set-event-history","title":"Event History","description":"You can see the history of alerts that occurred through Event History.","permalink":"/en/nodejs/set-event-history"},{"id":"nodejs/set-event-format","title":"Event reception format","description":"Learn about the event reception format of the alerts provided by Application Monitoring.","permalink":"/en/nodejs/set-event-format"},{"id":"nodejs/warning-notice-v2","title":"Event Setting","description":"Alerts are sent through the resource usage, active transactions, and event conditions of error conditions of the application.","permalink":"/en/nodejs/warning-notice-v2"},{"id":"nodejs/flex-board","title":"Flex Board","description":"The following guides you to the custom integrated dashboard. You can create real-time dashboards with the data for applications, servers, databases, containers, and more. It provides pre-configured templates. Through the features such as adding various data widgets, data filtering, and setting time ranges, you can easily summarize desired monitoring targets and check important data.","permalink":"/en/nodejs/flex-board"},{"id":"nodejs/flexboard-manage","title":"Flex Board Management","description":"The following explains how to edit and manage dashboards in Flex Board. It includes changing the dashboard name, selecting a project, and adjusting the layout for you to see how to add, move, resize, and delete widgets. It also provides the features to select data source for the widget and to export data to json format for the dashboard.","permalink":"/en/nodejs/flexboard-manage"},{"id":"nodejs/flexboard-mode","title":"Flex board screen modes","description":"Let\'s learn the provided functions according to the screen mode of the Flex board.","permalink":"/en/nodejs/flexboard-mode"},{"id":"nodejs/analysis-hitmap","title":"Hitmap","description":"The following explains how to configure the detailed transaction profiling in the application. The transaction profiling allows you to collect and analyze the performance data for each transaction in the application, which can help improve the performance of the application.","permalink":"/en/nodejs/analysis-hitmap"},{"id":"nodejs/dashboard-hitmap-trace","title":"HITMAP - Trace analysis","description":"You can see the transaction list and steps under each transaction at once by opening the trace analysis window through the Hitmap widget.","permalink":"/en/nodejs/dashboard-hitmap-trace"},{"id":"nodejs/agent-httpcapicall","title":"HTTPC, API Call","description":"It provides the HTTPC and API call related options of the Node.js agent.","permalink":"/en/nodejs/agent-httpcapicall"},{"id":"nodejs/install-check","title":"Installation checking items","description":"The items must be checked after installing the agent.","permalink":"/en/nodejs/install-check"},{"id":"nodejs/install-agent-nextjs","title":"Installation of the Next.js environment","description":"The following explains how to configure the Custom Server for monitoring the Node.js applications in the server-side rendering (SSR) framework such as Next.js.","permalink":"/en/nodejs/install-agent-nextjs"},{"id":"nodejs/install-agent","title":"Installation of the Node.js agent","description":"The following explains how to install an agent on the application server in the Node.js environment.","permalink":"/en/nodejs/install-agent"},{"id":"nodejs/install-agent-nuxtjs","title":"Installation of the Nuxt.js environment","description":"The following explains how to configure the Custom Server for monitoring the Node.js applications in the server-side rendering (SSR) framework such as Nuxt.js.","permalink":"/en/nodejs/install-agent-nuxtjs"},{"id":"kubernetes/install-docker-nodejs","title":"Installing Docker Node.js","description":"This step allows you to install the agent to monitor Node.js applications in the container.","permalink":"/en/kubernetes/install-docker-nodejs"},{"id":"nodejs/install-agent-docker","title":"Installing the Docker environment","description":"It guides you how to create a DockerFile in the Docker environment to install and run the Node.js agent.","permalink":"/en/nodejs/install-agent-docker"},{"id":"nodejs/instance-performance-analysis","title":"Instance Performance Management","description":"You can see the Node.js application environment along with the performance-related settings.","permalink":"/en/nodejs/instance-performance-analysis"},{"id":"nodejs/integrated-report","title":"Integrated Report","description":"It guides you to the integrated report.","permalink":"/en/nodejs/integrated-report"},{"id":"nodejs/labs","title":"Laboratory","description":"The following introduces users about the Lab menu that provides new or experimental features.","permalink":"/en/nodejs/labs"},{"id":"nodejs/learn-apm-main-menu","title":"Learn about the main features","description":"The following describes the main menus of the application monitoring service.","permalink":"/en/nodejs/learn-apm-main-menu"},{"id":"nodejs/agent-manage","title":"Management","description":"It explains how to update or delete the Node.js agent.","permalink":"/en/nodejs/agent-manage"},{"id":"nodejs/flexboard-widget-manage","title":"Managing the widgets","description":"The following explains how to add, change, copy, and delete widgets placed on the Flex Board. You can customize the dashboard by adding widgets or adjusting the properties of existing widgets. You can configure a dashboard that suits your monitoring needs through detailed controls such as changing widget data search conditions, setting the time, and setting the data merge options.","permalink":"/en/nodejs/flexboard-widget-manage"},{"id":"nodejs/metrics-detect-anormal","title":"Metric Anomaly Detection","description":"You can compare the patterns of various metrics with the expected patterns learned by the AI.","permalink":"/en/nodejs/metrics-detect-anormal"},{"id":"nodejs/metrics-intro","title":"Metrics","description":"It describes an overview of metrics.","permalink":"/en/nodejs/metrics-intro"},{"id":"nodejs/metric-warning-notice","title":"Metrics alert","description":"Use the metrics event settings to set specific and complex events.","permalink":"/en/nodejs/metric-warning-notice"},{"id":"nodejs/flexboard-metric-widget","title":"Metrics widget","description":"The following explains how to add metrics data that represents project performance metrics to the dashboard in the form of widget. Metrics are classified into categories, data can be explored using tags, and are available in two types: table widget and series widget.","permalink":"/en/nodejs/flexboard-metric-widget"},{"id":"nodejs/analysis-msa","title":"MSA Analysis","description":"The MSA analysis function analyzes the proportion of calls between transactions collected through the WhaTap\'s MTRACE (multi-server tracing) function.","permalink":"/en/nodejs/analysis-msa"},{"id":"nodejs/trs-multi-trace","title":"Multi-transaction","description":"It guides you to the multi transaction tracing.","permalink":"/en/nodejs/trs-multi-trace"},{"id":"nodejs/analysis-trace-mtx","title":"Multiple transaction trace","description":"The transactions and trace data are provided so that you can see various call relationships at a glance within or between systems, and identify where problems occurred for improvement.","permalink":"/en/nodejs/analysis-trace-mtx"},{"id":"nodejs/set-agent","title":"Node.js environment configuration","description":"The following explains how to configure the default settings of the Node.js agent.","permalink":"/en/nodejs/set-agent"},{"id":"nodejs/introduction","title":"Node.js Monitoring","description":"You can monitor the application server that runs in the Node.js environment.","permalink":"/en/nodejs/introduction"},{"id":"nodejs/supported-spec","title":"Node.js support environment","description":"It provides the basic specifications of the Node.js application server in which the WhaTap Monitoring service runs.","permalink":"/en/nodejs/supported-spec"},{"id":"nodejs/set-notification-message","title":"Notification message customization","description":"It provides the customization function to modify the alert notification messages that are delivered to project members.","permalink":"/en/nodejs/set-notification-message"},{"id":"nodejs/performance-trend","title":"Performance Trend","description":"It guides you to the performance trend.","permalink":"/en/nodejs/performance-trend"},{"id":"nodejs/report-intro","title":"Report","description":"It guides you to the report.","permalink":"/en/nodejs/report-intro"},{"id":"nodejs/topology-settings","title":"Setting the agent options","description":"It explains how to apply the options to an agent for using the topology functions.","permalink":"/en/nodejs/topology-settings"},{"id":"kubernetes/set-agent","title":"Setting the Kubernetes agent options","description":"Configure necessary settings in whatap.conf for monitoring the applications in the container. Let\'s learn about available options.","permalink":"/en/kubernetes/set-agent"},{"id":"nodejs/trs-endpoint-setting","title":"Setting the transaction endpoint","description":"It guides you to the transaction endpoint setting.","permalink":"/en/nodejs/trs-endpoint-setting"},{"id":"nodejs/flexboard-share","title":"Sharing the Flex board","description":"The Flex board can be shared and reused by the users with other accounts.","permalink":"/en/nodejs/flexboard-share"},{"id":"nodejs/agent-static","title":"Statistics","description":"The following options are related to the statistics collection for the data collected by the agent.","permalink":"/en/nodejs/agent-static"},{"id":"nodejs/analysis-apm-trs","title":"Statistics","description":"Through various metrics collected from the Node.js application environment, statistical data is provided.","permalink":"/en/nodejs/analysis-apm-trs"},{"id":"nodejs/topology-type","title":"Topologies by type","description":"Let\'s learn about the functions provided by the type-based topology.","permalink":"/en/nodejs/topology-type"},{"id":"nodejs/topology","title":"Topology","description":"Through the real-time data collected from the monitored servers, you can easily understand the correlation between application servers.","permalink":"/en/nodejs/topology"},{"id":"nodejs/agent-topology","title":"Topology map","description":"This option creates the topology map by using the data collected by the agents.","permalink":"/en/nodejs/agent-topology"},{"id":"nodejs/dashboard-transactionmap","title":"Transaction Map","description":"Transaction map is a chart that expresses the response time of each individual completed transaction in the form of distribution chart.","permalink":"/en/nodejs/dashboard-transactionmap"},{"id":"nodejs/tx-profile","title":"Transaction search","description":"You can search for the desired transaction based on the individual transaction\'s performance properties.","permalink":"/en/nodejs/tx-profile"},{"id":"nodejs/collect-stacks","title":"Transaction step collection method","description":"It guides you to the transaction step collection method.","permalink":"/en/nodejs/collect-stacks"},{"id":"nodejs/trs-profile","title":"Transaction Tracing","description":"The following explains how to configure the detailed transaction profiling in your application. Transaction profiling allows you to collect and analyze performance data for each transaction within the application, which can help improve the performance of the application.","permalink":"/en/nodejs/trs-profile"},{"id":"nodejs/agent-transaction","title":"Transactions","description":"The agent traces the transaction performance and provides the following configurable options.","permalink":"/en/nodejs/agent-transaction"},{"id":"nodejs/track-transactions-intro","title":"Transactions","description":"It guides you to the overview of transaction.","permalink":"/en/nodejs/track-transactions-intro"},{"id":"nodejs/agent-number-of-user","title":"User count","description":"It aggregates the numbers of real-time users connected to WAS.","permalink":"/en/nodejs/agent-number-of-user"}],"unlisted":false}}');

/***/ })

}]);