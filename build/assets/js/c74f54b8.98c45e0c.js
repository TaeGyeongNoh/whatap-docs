"use strict";(self.webpackChunkWhaTap_Docs=self.webpackChunkWhaTap_Docs||[]).push([[52930],{13499:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>h});var r=n(74848),a=n(28453);n(67068),n(5379);const i={id:"golang-0_1_12",title:"Go Agent v0.1.12",toc_max_heading_level:2,displayed_sidebar:"releaseSidebar"},o=void 0,s={id:"release-notes/golang/golang-0_1_12",title:"Go Agent v0.1.12",description:"Release date: 2022-08-02",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/release-notes/golang/golang-0.1.12.mdx",sourceDirName:"release-notes/golang",slug:"/release-notes/golang/golang-0_1_12",permalink:"/release-notes/golang/golang-0_1_12",draft:!1,unlisted:!1,editUrl:"undefined/docs/release-notes/golang/golang-0.1.12.mdx",tags:[],version:"current",frontMatter:{id:"golang-0_1_12",title:"Go Agent v0.1.12",toc_max_heading_level:2,displayed_sidebar:"releaseSidebar"},sidebar:"releaseSidebar"},c={},h=[{value:"Beta - update",id:"beta---update",level:2},{value:"The Alpine Linux is supported.",id:"the-alpine-linux-is-supported",level:3},{value:"Installation guide",id:"installation-guide",level:4},{value:"Running the whatap-agent",id:"running-the-whatap-agent",level:4},{value:"Supporting the github.com/go-chi/chi library",id:"supporting-the-githubcomgo-chichi-library",level:3},{value:"Installation guide",id:"installation-guide-1",level:4},{value:"Supporting the github.com/go-gorm/gorm library",id:"supporting-the-githubcomgo-gormgorm-library",level:3},{value:"How to use the whatapgorm",id:"how-to-use-the-whatapgorm",level:4},{value:"How to use the whatapsql",id:"how-to-use-the-whatapsql",level:4},{value:"Supporting the github.com/jinzhu/gorm library",id:"supporting-the-githubcomjinzhugorm-library",level:3},{value:"How to use the whatapgorm",id:"how-to-use-the-whatapgorm-1",level:4},{value:"How to use the whatapsql",id:"how-to-use-the-whatapsql-1",level:4},{value:"Supporting the github.com/gomodule/redigo library",id:"supporting-the-githubcomgomoduleredigo-library",level:3},{value:"Supporting the github.com/shopify/sarama library",id:"supporting-the-githubcomshopifysarama-library",level:3},{value:"Tracing the async producer",id:"tracing-the-async-producer",level:4},{value:"Tracing the consumer",id:"tracing-the-consumer",level:4}];function l(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",section:"section",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Release date: 2022-08-02"}),"\n",(0,r.jsx)(t.section,{className:"remark-sectionize-h2",children:(0,r.jsx)(t.h2,{id:"beta---update",children:"Beta - update"})}),"\n",(0,r.jsx)(t.section,{className:"remark-sectionize-h3",children:(0,r.jsx)(t.h3,{id:"the-alpine-linux-is-supported",children:"The Alpine Linux is supported."})}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(t.h4,{id:"installation-guide",children:"Installation guide"}),(0,r.jsxs)(t.p,{children:["[whatap-agent.tar.gz]After downloading the file (",(0,r.jsx)(t.a,{href:"https://s3.ap-northeast-2.amazonaws.com/repo.whatap.io/alpine/x86_64/whatap-agent.tar.gz",children:"https://s3.ap-northeast-2.amazonaws.com/repo.whatap.io/alpine/x86_64/whatap-agent.tar.gz"}),'), unzip the file based on the "/" directory. Create the monitoring file in the ',(0,r.jsx)(t.em,{children:"/usr/whatap/agent"})," path."]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"wget https://s3.ap-northeast-2.amazonaws.com/repo.whatap.io/alpine/x86_64/whatap-agent.tar.gz\ntar -xvzf whatap-agent.tar.gz -C /\n"})})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(t.h4,{id:"running-the-whatap-agent",children:"Running the whatap-agent"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"/usr/whatap/agent/whatap-agent \n    Default restart\n    Command start, stop, restart, version\n\n## Checking the version\n# /usr/whatap/agent/whatap-agent version\n0.8.5.20201209\n\n## Checking the execution\n# ps -elf | grep whatap\n  103 root      0:05 ./whatap_agent_static -t=4\n"})})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(t.h3,{id:"supporting-the-githubcomgo-chichi-library",children:"Supporting the github.com/go-chi/chi library"}),(0,r.jsxs)(t.p,{children:["It traces the web transactions in the chi framework. Through the ",(0,r.jsx)(t.code,{children:"Use"})," function, register and trace the middleware."]})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(t.h4,{id:"installation-guide-1",children:"Installation guide"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:'import (\n  "github.com/go-chi/chi"\n  "github.com/whatap/go-api/trace"\n  "github.com/whatap/go-api/instrumentation/github.com/go-chi/chi/whatapchi"\n)\n\nfunc main() {\n  config := make(map[string]string)\n  trace.Init(config)\n  defer trace.Shutdown()\n  \n  r := chi.NewRouter()\n  \n  // Register the middleware of whatapchi.\n  r.Use(whatapchi.Middleware)\n  \n  r.Get("/", func(w http.ResponseWriter, r *http.Request) {\n      fmt.Println("Response -", r.Response)\n})\n'})}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/whatap/go-api-example/tree/main/github.com/go-chi/chi",children:"Example reference"})})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(t.h3,{id:"supporting-the-githubcomgo-gormgorm-library",children:"Supporting the github.com/go-gorm/gorm library"}),(0,r.jsx)(t.p,{children:"It traces the DB connection and SQLs processed through the gorm v2 framework."})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(t.h4,{id:"how-to-use-the-whatapgorm",children:"How to use the whatapgorm"}),(0,r.jsxs)(t.p,{children:["Instead of the ",(0,r.jsx)(t.code,{children:"gorm.Open"})," function, the ",(0,r.jsx)(t.code,{children:"whatapgorm.OpenWithContext"})," function is used. The context to be passed must include whatap TraceCtx, and can be created through the ",(0,r.jsx)(t.code,{children:"Start"})," function of the trace package."]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",metastring:"title='Install guide'",children:'import (\n  "net/http"\n\n  "github.com/whatap/go-api/instrumentation/github.com/go-gorm/gorm/whatapgorm"\n  "github.com/whatap/go-api/trace"\n  "gorm.io/driver/sqlite"\n  "gorm.io/gorm"\n)\n\nfunc main() {\n  whatapConfig := make(map[string]string)\n  trace.Init(whatapConfig)\n  defer trace.Shutdown()\n\n  http.HandleFunc("/InsertAndDelete", func(w http.ResponseWriter, r *http.Request) {\n    // Create the context.\n    ctx, _ := trace.StartWithRequest(r)\n    defer trace.End(ctx, nil)\n\n    // Connect the DB through whatapgorm.\n    db, err := whatapgorm.OpenWithContext(sqlite.Open("test.db"), &gorm.Config{}, ctx)\n    if err != nil {\n      panic("Db connection failed.")\n    }\n\n    for i := 0; i < 100; i++ {\n      db.Create(&Product{Code: i, Price: i * 100})\n    }\n\n    db.Unscoped().Delete(&Product{}, "Code >= ? AND Code < ?", 0, 100)\n  })\n\n  _ = http.ListenAndServe(fmt.Sprintf(":%d", port), nil)\n}\n'})})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(t.h4,{id:"how-to-use-the-whatapsql",children:"How to use the whatapsql"}),(0,r.jsx)(t.p,{children:"In addition to officially supported sqlite, mysql, postgres, and sqlserver, the gorm is compatible with the drivers written based on the dialect interface."}),(0,r.jsxs)(t.p,{children:["Related link: ",(0,r.jsx)(t.a,{href:"https://gorm.io/docs/write_driver.html",children:"gorm driver"})]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",metastring:"title='Install guide'",children:'import (\n  "net/http"\n  "github.com/whatap/go-api/instrumentation/database/sql/whatapsql"\n  "github.com/whatap/go-api/trace"\n  "gorm.io/driver/mysql"\n  "gorm.io/gorm"\n)\n\nfunc main() {\n  whatapConfig := make(map[string]string)\n  trace.Init(whatapConfig)\n  defer trace.Shutdown()\n\n  http.HandleFunc("/WhatapDriverTest", func(w http.ResponseWriter, r *http.Request) {\n    // Create the context.\n    ctx, _ := trace.StartWithRequest(r)\n    defer trace.End(ctx, nil)\n\n    // Create the DB connection via the whatapsql driver.\n    dbConn, err := whatapsql.OpenContext(ctx, "mysql", dataSource)\n    \n    // Connect gorm through the created connection.\n    db, err := gorm.Open(mysql.New(mysql.Config{Conn: dbConn}), &gorm.Config{})\n    if err != nil {\n      panic("DB connection failed.")\n    }\n    \n    for i := 0; i < 100; i++ {\n      db.Create(&Product{Code: i, Price: i * 100})\n    }\n  })\n\n  _ = http.ListenAndServe(fmt.Sprintf(":%d", port), nil)\n}\n'})}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/whatap/go-api-example/tree/main/github.com/go-orm/gorm",children:"Reference example"})})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(t.h3,{id:"supporting-the-githubcomjinzhugorm-library",children:"Supporting the github.com/jinzhu/gorm library"}),(0,r.jsx)(t.p,{children:"It traces the DB connection and SQLs processed through the gorm v1 framework."})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(t.h4,{id:"how-to-use-the-whatapgorm-1",children:"How to use the whatapgorm"}),(0,r.jsxs)(t.p,{children:["Instead of the ",(0,r.jsx)(t.code,{children:"gorm.Open"})," function, the ",(0,r.jsx)(t.code,{children:"whatapgorm.OpenWithContext"})," function is used. The context to be passed must include whatap TraceCtx, and can be created through the Start function of the trace package."]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",metastring:"title='Install guide'",children:'import (\n  "net/http"\n\n  "github.com/whatap/go-api/instrumentation/github.com/go-gorm/gorm/whatapgorm"\n  "github.com/whatap/go-api/trace"\n  _ "github.com/mattn/go-sqlite3"\n  "github.com/jinzhu/gorm"\n)\n\nfunc main() {\n  whatapConfig := make(map[string]string)\n  trace.Init(whatapConfig)\n  defer trace.Shutdown()\n\n  http.HandleFunc("/InsertAndDelete", func(w http.ResponseWriter, r *http.Request) {\n    // Create the context.\n    ctx, _ := trace.StartWithRequest(r)\n    defer trace.End(ctx, nil)\n\n    // Connect the DB via whatapgorm.\n    db, err := whatapgorm.OpenWithContext(ctx, "sqlite3", "test.db")\n    defer db.Close()\n    if err != nil {\n      trace.Error(ctx, err)\n      panic("Gorm Open Fail")\n    }\n\n    for i := 0; i < 100; i++ {\n      db.Create(&Product{Code: i, Price: i * 100})\n    }\n\n    db.Unscoped().Delete(Product{}, "Code >= ? AND Code < ?", 0, 100)\n  })\n\n  _ = http.ListenAndServe(fmt.Sprintf(":%d", port), nil)\n}\n'})})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(t.h4,{id:"how-to-use-the-whatapsql-1",children:"How to use the whatapsql"}),(0,r.jsx)(t.p,{children:"In addition to officially supported sqlite, mysql, postgres, and sqlserver, the gorm is compatible with the drivers written based on the dialect interface."}),(0,r.jsxs)(t.p,{children:["Related link: ",(0,r.jsx)(t.a,{href:"https://v1.gorm.io/docs/dialects.html",children:"gorm driver"})]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",metastring:"title='Install guide'",children:'import (\n  "net/http"\n  "github.com/whatap/go-api/instrumentation/database/sql/whatapsql"\n  "github.com/whatap/go-api/trace"\n  "github.com/jinzhu/gorm"\n_ "github.com/go-sql-driver/mysql"\n)\n\nfunc main() {\n  whatapConfig := make(map[string]string)\n  trace.Init(whatapConfig)\n  defer trace.Shutdown()\n\n  http.HandleFunc("/WhatapDriverTest", func(w http.ResponseWriter, r *http.Request) {\n    // Create the context.\n    ctx, _ := trace.StartWithRequest(r)\n    defer trace.End(ctx, nil)\n\n    // Create the DB connection via the whatapsql driver.\n    var conn gorm.SQLCommon\n    var err error\n    conn, err = whatapsql.OpenContext(ctx, "mysql", dataSource)\n    if err != nil {\n      trace.Error(ctx, err)\n      panic("Whatapsql Open Fail")\n    }\n    \n    // Connect gorm via the created connection.\n    db, err := gorm.Open("mysql", conn)\n    if err != nil {\n      trace.Error(ctx, err)\n      panic("Gorm Open Fail")\n    }\n    for i := 0; i < 100; i++ {\n      db.Create(&Product{Code: i, Price: i * 100})\n    }\n  })\n\n  _ = http.ListenAndServe(fmt.Sprintf(":%d", port), nil)\n}\n'})}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/whatap/go-api-example/tree/main/github.com/jinzhu/gorm",children:"Reference example"})})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(t.h3,{id:"supporting-the-githubcomgomoduleredigo-library",children:"Supporting the github.com/gomodule/redigo library"}),(0,r.jsxs)(t.p,{children:["It traces commands passed to Redis via the redigo framework. Instead of ",(0,r.jsx)(t.code,{children:"redis.Dial"}),", the ",(0,r.jsx)(t.code,{children:"whatapredigo.DialContext"})," function is used."]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",metastring:"title='Install guide'",children:'import (\n  "context"\n  "net/http"\n\n  "github.com/gomodule/redigo/redis"\n  "github.com/whatap/go-api/instrumentation/github.com/gomodule/redigo/whatapredigo"\n  "github.com/whatap/go-api/trace"\n)\n\nfunc main() {\n  whatapConfig := make(map[string]string)\n  trace.Init(whatapConfig)\n  defer trace.Shutdown()\n\n  http.HandleFunc("/SetAndGetWithDialContext", func(w http.ResponseWriter, r *http.Request) {\n    // Create the context.\n    ctx, _ := trace.StartWithRequest(r)\n    defer trace.End(ctx, nil)\n\n    // Create the Redis connection via the whtapredigo.\n    conn, err := whatapredigo.DialContext(ctx, "tcp", "127.0.0.1:6379")\n    if err != nil {\n      trace.Error(ctx, err)\n      return\n    }\n    defer conn.Close()\n\n    _, err = conn.Do("SET", "DataKey", "DataValue")\n    if err != nil {\n      trace.Error(ctx, err)\n      return\n    }\n\n    data, err := redis.Bytes(conn.Do("GET", "DataKey"))\n    if err != nil {\n      trace.Error(ctx, err)\n      return\n    }\n  })\n}\n'})}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/whatap/go-api-example/tree/main/github.com/gomodule/redigo",children:"Reference example"})})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(t.h3,{id:"supporting-the-githubcomshopifysarama-library",children:"Supporting the github.com/shopify/sarama library"}),(0,r.jsx)(t.p,{children:"It traces the kafka produce and consume events processed through the sarama framework."})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(t.h4,{id:"tracing-the-async-producer",children:"Tracing the async producer"}),(0,r.jsx)(t.p,{children:"It traces the async producer data through the whatapsarama's interceptor. When generating the producer message, if CTX-related data is passed through metadata, it is connected to the multi-transaction."}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",metastring:"title='Install guide'",children:'import (\n  "context"\n  "net/http"\n  "github.com/Shopify/sarama"\n  "github.com/whatap/go-api/instrumentation/github.com/Shopify/sarama/whatapsarama"\n  "github.com/whatap/go-api/trace"\n)\n\nfunc main() {\n  config := sarama.NewConfig()\n  brokers := []string{"127.0.0.1:9092"} //config kafka broker IP/Port\n\n  // Register the interrupt of whatapsarama in the config.\n  interceptor := whatapsarama.Interceptor{Brokers: brokers}\n  config.Producer.Interceptors = []sarama.ProducerInterceptor{&interceptor}\n\n  whatapConfig := make(map[string]string)\n  trace.Init(whatapConfig)\n  defer trace.Shutdown()\n\n  // The config is delivered upon prdoducer creation.\n  producer, err := sarama.NewAsyncProducer(brokers, config)\n  consumerOffset := sarama.OffsetOldest\n  if err != nil {\n    panic(err)\n  }\n  defer func() {\n    if err := producer.Close(); err != nil {\n      panic(err)\n    }\n  }()\n\n  http.HandleFunc("/AsyncProduceInput", func(w http.ResponseWriter, r *http.Request) {\n    ctx, _ := trace.StartWithRequest(r)\n    defer func() {\n      trace.End(ctx, nil)\n    }()\n    msg := &sarama.ProducerMessage{\n      Topic:    "tmp-topic",\n      Key:      sarama.StringEncoder("Data Key"),\n      Value:    sarama.StringEncoder("Data Value"),\n      Metadata: trace.GetMTrace(ctx),\n    }\n    producer.Input() <- msg //error check\n\n  })\n\n  _ = http.ListenAndServe(fmt.Sprintf(":%d", port), nil)\n}\n'})})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(t.h4,{id:"tracing-the-consumer",children:"Tracing the consumer"}),(0,r.jsx)(t.p,{children:"It traces the consumer data through the whatapsarama's interceptor. Based on the message delivered from the producer, it is connected to the multi-transaction."}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",metastring:"title='Install guide'",children:'import (\n  "context"\n  "flag"\n  "fmt"\n  "net/http"\n  "text/template"\n\n  "github.com/Shopify/sarama"\n  "github.com/whatap/go-api/instrumentation/github.com/Shopify/sarama/whatapsarama"\n  "github.com/whatap/go-api/trace"\n)\n\nfunc main() {\n  config := sarama.NewConfig()\n  brokers := []string{"127.0.0.1:9092"} //config kafka broker IP/Port\n\n  // Register the interrupt of whatapsarama in the config.\n  interceptor := whatapsarama.Interceptor{Brokers: brokers}\n  config.Consumer.Interceptors = []sarama.ConsumerInterceptor{&interceptor}\n\n  // 1 transaction per consumption\n  // The config is delivered when creating a consumer.\n  consumer, err := sarama.NewConsumer(brokers, config)\n  topic := "tmp-topic"\n\n  partitions, _ := consumer.Partitions(topic)\n  consume, _ := consumer.ConsumePartition(topic, partitions[0], consumerOffset)\n\n  if consume == nil {\n    fmt.Println("consume nil")\n    return\n  }\n\n  go func() {\n    for {\n      select {\n      case msg := <-consume.Messages():\n        fmt.Println(msg)\n      case consumerError := <-consume.Errors():\n        fmt.Println("error", consumerError)\n        return\n      }\n    }\n  }()\n}\n'})}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/whatap/go-api-example/tree/main/github.com/shopify/sarama",children:"Reference example"})})]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},67068:(e,t,n)=>{n.d(t,{A:()=>a});var r=n(74848);n(96540);function a({children:e,priority:t}){return t?(0,r.jsx)("code",{className:e,type:t,children:e}):(0,r.jsx)("code",{className:e,children:e})}},5379:(e,t,n)=>{n.d(t,{A:()=>a});var r=n(74848);n(96540);function a({children:e}){return(0,r.jsx)("span",{className:"uitext",children:e})}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var r=n(96540);const a={},i=r.createContext(a);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);