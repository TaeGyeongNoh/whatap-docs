"use strict";(self.webpackChunkWhaTap_Docs=self.webpackChunkWhaTap_Docs||[]).push([[17748],{21711:(t,n,e)=>{e.d(n,{Ay:()=>c,RM:()=>s});var o=e(74848),a=e(28453);const s=[];function i(t){const n={code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...t.components};return(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"tx_caller_meter_enabled"})," ",(0,o.jsx)("span",{class:"type",children:"Boolean"})]}),"\n",(0,o.jsxs)(n.p,{children:["Default ",(0,o.jsx)(n.code,{children:"false"})]}),"\n",(0,o.jsxs)(n.p,{children:["It creates the topology statistics by using transactions. If the value of the ",(0,o.jsx)(n.code,{children:"mtrace_enabled"})," option is ",(0,o.jsx)(n.code,{children:"true"}),", it works."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"sql_dbc_meter_enabled"})," ",(0,o.jsx)("span",{class:"type",children:"Boolean"})]}),"\n",(0,o.jsxs)(n.p,{children:["Default ",(0,o.jsx)(n.code,{children:"false"})]}),"\n",(0,o.jsx)(n.p,{children:"It creates the topology statistics based on the database connection information."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"httpc_host_meter_enabled"})," ",(0,o.jsx)("span",{class:"type",children:"Boolean"})]}),"\n",(0,o.jsxs)(n.p,{children:["Default ",(0,o.jsx)(n.code,{children:"false"})]}),"\n",(0,o.jsx)(n.p,{children:"It represents the HTTPC outbound data from the topology map."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"actx_meter_enabled"})," ",(0,o.jsx)("span",{class:"type",children:"Boolean"})]}),"\n",(0,o.jsxs)(n.p,{children:["Default ",(0,o.jsx)(n.code,{children:"false"})]}),"\n",(0,o.jsx)(n.p,{children:"It represents the status of active transactions in the topology map."}),"\n"]}),"\n"]})}function c(t={}){const{wrapper:n}={...(0,a.R)(),...t.components};return n?(0,o.jsx)(n,{...t,children:(0,o.jsx)(i,{...t})}):i(t)}},83203:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var o=e(74848),a=e(28453),s=e(21711);const i={id:"agent-toplogy",title:"Topology map",description:"The following guides you to the agent configuration options that use the data collected by the Java agent to create a topology map for applications. You can visualize and analyze the topology of your system through various metrics, such as transaction callers, database connection information, HTTPC outbound information, and active transaction status.",tags:["Java","Application","Topology","Agent"]},c=void 0,r={id:"java/agent-toplogy",title:"Topology map",description:"The following guides you to the agent configuration options that use the data collected by the Java agent to create a topology map for applications. You can visualize and analyze the topology of your system through various metrics, such as transaction callers, database connection information, HTTPC outbound information, and active transaction status.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/java/agent-topology.mdx",sourceDirName:"java",slug:"/java/agent-toplogy",permalink:"/java/agent-toplogy",draft:!1,unlisted:!1,editUrl:"undefined/docs/java/agent-topology.mdx",tags:[{inline:!0,label:"Java",permalink:"/tags/java"},{inline:!0,label:"Application",permalink:"/tags/application"},{inline:!0,label:"Topology",permalink:"/tags/topology"},{inline:!0,label:"Agent",permalink:"/tags/agent"}],version:"current",frontMatter:{id:"agent-toplogy",title:"Topology map",description:"The following guides you to the agent configuration options that use the data collected by the Java agent to create a topology map for applications. You can visualize and analyze the topology of your system through various metrics, such as transaction callers, database connection information, HTTPC outbound information, and active transaction status.",tags:["Java","Application","Topology","Agent"]},sidebar:"javaSidebar",previous:{title:"Statistics",permalink:"/java/agent-static"},next:{title:"Transaction error stack",permalink:"/java/agent-transaction-error-stack"}},l={},p=[...s.RM];function d(t){const n={p:"p",...(0,a.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"The following guides you to the agent configuration options that use the data collected by the Java agent to create a topology map for applications. You can visualize and analyze the topology of your system through various metrics, such as transaction callers, database connection information, HTTPC outbound information, and active transaction status."}),"\n","\n",(0,o.jsx)(s.Ay,{})]})}function u(t={}){const{wrapper:n}={...(0,a.R)(),...t.components};return n?(0,o.jsx)(n,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},28453:(t,n,e)=>{e.d(n,{R:()=>i,x:()=>c});var o=e(96540);const a={},s=o.createContext(a);function i(t){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function c(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:i(t.components),o.createElement(s.Provider,{value:n},t.children)}}}]);