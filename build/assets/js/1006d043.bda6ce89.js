"use strict";(self.webpackChunkWhaTap_Docs=self.webpackChunkWhaTap_Docs||[]).push([[62897],{95461:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>x,frontMatter:()=>n,metadata:()=>c,toc:()=>h});var d=s(74848),r=s(28453);const n={id:"metrics-data-list",title:"PostgreSQL metrics",description:"It guides you to the PostgreSQL database metrics.",tags:["PostgreSQL","Metrics","Database","Database Monitoring"]},i=void 0,c={id:"postgresql/metrics-data-list",title:"PostgreSQL metrics",description:"It guides you to the PostgreSQL database metrics.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/postgresql/metrics-data-list.mdx",sourceDirName:"postgresql",slug:"/postgresql/metrics-data-list",permalink:"/postgresql/metrics-data-list",draft:!1,unlisted:!1,editUrl:"undefined/docs/postgresql/metrics-data-list.mdx",tags:[{inline:!0,label:"PostgreSQL",permalink:"/tags/postgre-sql"},{inline:!0,label:"Metrics",permalink:"/tags/metrics"},{inline:!0,label:"Database",permalink:"/tags/database"},{inline:!0,label:"Database Monitoring",permalink:"/tags/database-monitoring"}],version:"current",frontMatter:{id:"metrics-data-list",title:"PostgreSQL metrics",description:"It guides you to the PostgreSQL database metrics.",tags:["PostgreSQL","Metrics","Database","Database Monitoring"]},sidebar:"postgreSidebar",previous:{title:"Metrics",permalink:"/postgresql/metrics-intro"},next:{title:"Metrics Chart",permalink:"/postgresql/metrics-chart"}},l={},h=[];function o(e){const t={a:"a",code:"code",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.p,{children:"Database metrics are a comprehensive collection of database workloads and resource usages. The WhaTap monitoring service continuously collects metric data to identify bottlenecks in the database and provides data to help identify the root cause of the performance issue."}),"\n",(0,d.jsxs)(t.p,{children:["For more information about other metrics, see ",(0,d.jsx)(t.a,{href:"https://www.postgresql.org/docs/",children:"the link"}),"."]}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Indicators"}),(0,d.jsx)(t.th,{style:{textAlign:"center"},children:"Unit"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Category"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"active_sessions"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Total number of connections for query"}),(0,d.jsx)(t.td,{children:"Connection"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"blk_read_time"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"millisecond"}),(0,d.jsx)(t.td,{children:"Time spent writing data file blocks on the backend"}),(0,d.jsx)(t.td,{children:"I/O"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"blk_write_time"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"millisecond"}),(0,d.jsx)(t.td,{children:"Time spent writing data file blocks on the backend"}),(0,d.jsx)(t.td,{children:"I/O"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"blks_hit"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Total count where a disk block was found in the buffer cache and did not require a read"}),(0,d.jsx)(t.td,{children:"I/O"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"blks_hit_ratio"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"pct"}),(0,d.jsxs)(t.td,{children:["It indicates the buffer cache hit rate. This can be calculated by sum(",(0,d.jsx)(t.code,{children:"blks_hit"}),")/sum(",(0,d.jsx)(t.code,{children:"blks_hit"})," + ",(0,d.jsx)(t.code,{children:"blks_read"}),") * 100."]}),(0,d.jsx)(t.td,{children:"I/O"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"blks_read"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Number of disk blocks read from the database"}),(0,d.jsx)(t.td,{children:"I/O"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"buffers_checkpoint"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Total number of buffers written by the checkpointer process"}),(0,d.jsx)(t.td,{children:"Info"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"check_point"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"checkpoint execution count"}),(0,d.jsx)(t.td,{children:"Troughput"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"checkpoint_write_time"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"millisecond"}),(0,d.jsx)(t.td,{children:"Total time in milliseconds for disk write caused by the checkpoint operation"}),(0,d.jsx)(t.td,{children:"Troughput"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"checkpoints_timed"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsxs)(t.td,{children:["Number of checkpoint operations according to the ",(0,d.jsx)(t.code,{children:"checkpoint_timeout"})," setting"]}),(0,d.jsx)(t.td,{children:"Troughput"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"commit_count"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Number of transactions in the database committed"}),(0,d.jsx)(t.td,{children:"Troughput"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"conflicts"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Number of queries that were aborted because they conflicted with database recovery operations"}),(0,d.jsx)(t.td,{children:"Troughput"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"connect_error"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Counted number when the agent failed to access the database"}),(0,d.jsx)(t.td,{children:"Connection"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"deadlock_count"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Total number of deadlocks detected in the database"}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"dml_count"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Number of DML executions"}),(0,d.jsx)(t.td,{children:"Troughput"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"index_hit_ratio"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"pct"}),(0,d.jsx)(t.td,{children:"Rate at which indexes were read from the buffer cache"}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"lock_wait_sessions"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Number of sessions waiting for a lock"}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"long_running_sessions"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Number of sessions running for more than the long running time (default:10 seconds)"}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"max_connections"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsxs)(t.td,{children:["This value is set in ",(0,d.jsx)(t.code,{children:"pg_settings"})," for the maximum number of possible connections. If it is not enough, ",(0,d.jsx)(t.code,{children:"FATAL ERROR: too many clients already."})," Errors may occur."]}),(0,d.jsx)(t.td,{children:"Info"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"node_state"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsxs)(t.td,{children:["This database consists of replication relationships. ",(0,d.jsx)(t.code,{children:"1"}),": Master, ",(0,d.jsx)(t.code,{children:"2"}),": Slave."]}),(0,d.jsx)(t.td,{children:"Info"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"numbackends"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Number of connected backends"}),(0,d.jsx)(t.td,{children:"Info"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"replication_count"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Number of replication databases (Slave)"}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"replication_delay"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Delay time reflected in the replication database for the replication structure, this is a metric measured in the slave DB"}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"rollback_count"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Total number of transactions in the database rolled back"}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"table_hit_ratio"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Rate at which the tables were read from the buffer cache"}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"temp_bytes"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Total amount of data written to temporary files by queries in the database"}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"temp_files"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Total number of temporary files generated by queries in the database"}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"total_runtime"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Sum of runtimes (elapsed time) for all active sessions"}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"total_sessions"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Total number of connected sessions"}),(0,d.jsx)(t.td,{children:"Connection"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"tup_deleted"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Total number of rows deleted by the queries in the database"}),(0,d.jsx)(t.td,{children:"Troughput"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"tup_fetched"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Total number of rows fetched by the queries in the database"}),(0,d.jsx)(t.td,{children:"Troughput"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"tup_inserted"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Total number of rows added by the queries in the database"}),(0,d.jsx)(t.td,{children:"Troughput"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"tup_returned"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Number of rows returned by the queries in the database"}),(0,d.jsx)(t.td,{children:"Troughput"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"tup_updated"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Total number of rows updated by the queries in the database"}),(0,d.jsx)(t.td,{children:"Troughput"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"vacuum_running_count"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Number of processes for vacuuming"}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"wait_sessions"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Total number of queued connections"}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"seq_scan"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsxs)(t.td,{children:["Method to read records during full table scanning.",(0,d.jsx)("br",{})," Select this when any index does not exist or if an index exists, the range to be read is wide. This metric has the values queried every minute."]}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"idx_scan"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"With this method, table records are accessed using keys stored in index leaf blocks. This metric has values retrieved every minute."}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"wal"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Number of WAL files. Spikes in the WAL file counts are usually caused by the large amount of changes in a short period or vacuum-like maintenance operations that generate temporary tables and objects. They should slowly return to normal levels. This usually results in lots of disk I/O and CPU activity, slowing the application query's execution until things get back to normal. This metric has the values queried every minute."}),(0,d.jsx)(t.td,{children:"Performance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"cpu(xos2)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"pct"}),(0,d.jsxs)(t.td,{children:["CPU utilization, ",(0,d.jsx)(t.code,{children:"cpu_user"})," + ",(0,d.jsx)(t.code,{children:"cpu_sys"})," + ",(0,d.jsx)(t.code,{children:"cpu_iowait"}),"."]}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"cpu_user(xos2)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"pct"}),(0,d.jsx)(t.td,{children:"Time spent for CPU to execute user code"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"cpu_sys(xos2)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"pct"}),(0,d.jsx)(t.td,{children:"Time spent for CPU to execute the kernel code"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"cpu_iowait(xos2)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"pct"}),(0,d.jsx)(t.td,{children:"CPU time waited for IO"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"cpu_idle(xos2)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"pct"}),(0,d.jsx)(t.td,{children:"CPU processor's idle time"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"mem(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"pct"}),(0,d.jsx)(t.td,{children:"Memory utilization"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"mem_total(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"MB"}),(0,d.jsx)(t.td,{children:"Total amount of memory"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"mem_free(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"MB"}),(0,d.jsx)(t.td,{children:"Amount of memory not in use by the system"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"mem_used(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"MB"}),(0,d.jsx)(t.td,{children:"Amount of memory in use by the system"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"mem_buffcache(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"MB"}),(0,d.jsx)(t.td,{children:"Amount of memory used by the buff/cache"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"mem_swaptotal(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"MB"}),(0,d.jsx)(t.td,{children:"Set this in preparation for the case where the total Swap size and physical memory are insufficient."}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"mem_swapfree(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"MB"}),(0,d.jsx)(t.td,{children:"Because the unused Swap area and Swap area are secured in disk space, the system performance may drop drastically while using Swap."}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"mem_available(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"MB"}),(0,d.jsx)(t.td,{children:"Available memory area"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"disk_reads(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"block"}),(0,d.jsx)(t.td,{children:"Amount of data read from disk"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"disk_read_bytes(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"byte"}),(0,d.jsx)(t.td,{children:"Amount of data read from disk"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"disk_writes(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"block"}),(0,d.jsx)(t.td,{children:"Amount of data written to disk"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"disk_write_bytes(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"byte"}),(0,d.jsx)(t.td,{children:"Amount of data written to disk"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"net_recv_bytes(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"byte"}),(0,d.jsx)(t.td,{children:"Amount of data received over the network"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"net_recv_packets(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Number of data packets received over the network"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"net_send_bytes(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"byte"}),(0,d.jsx)(t.td,{children:"Amount of data transmitted over the network"}),(0,d.jsx)(t.td,{children:"XOS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"net_send_packets(xos)"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Number of data packets transmitted over the network"}),(0,d.jsx)(t.td,{children:"XOS"})]})]})]})]})}function x(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>c});var d=s(96540);const r={},n=d.createContext(r);function i(e){const t=d.useContext(n);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),d.createElement(n.Provider,{value:t},e.children)}}}]);