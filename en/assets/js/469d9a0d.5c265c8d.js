"use strict";(self.webpackChunkWhaTap_Docs=self.webpackChunkWhaTap_Docs||[]).push([["23526"],{51527:function(e,t,d){d.r(t),d.d(t,{metadata:()=>i,contentTitle:()=>h,default:()=>j,assets:()=>o,toc:()=>a,frontMatter:()=>l});var i=JSON.parse('{"id":"altibase/metrics-data-list","title":"Altibase Metrics","description":"The following is the guide to Altibase metrics.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/altibase/metrics-data-list.mdx","sourceDirName":"altibase","slug":"/altibase/metrics-data-list","permalink":"/en/altibase/metrics-data-list","draft":false,"unlisted":false,"editUrl":"undefined/docs/altibase/metrics-data-list.mdx","tags":[],"version":"current","frontMatter":{"id":"metrics-data-list","title":"Altibase Metrics","description":"The following is the guide to Altibase metrics.","keywords":["Altibase","Metrics","DATABASE","DATABASE"],"isTranslationMissing":false},"sidebar":"altibaseSidebar","previous":{"title":"Metrics","permalink":"/en/altibase/metrics-intro"},"next":{"title":"Metrics Chart","permalink":"/en/altibase/metrics-chart-v2"}}'),r=d("85893"),s=d("50065"),n=d("39308"),c=d("55314");let l={id:"metrics-data-list",title:"Altibase Metrics",description:"The following is the guide to Altibase metrics.",keywords:["Altibase","Metrics","DATABASE","DATABASE"],isTranslationMissing:!1},h=void 0,o={},a=[...n.d$,{value:"db_altibase_counter",id:"db_altibase_counter",level:2},{value:"Tags",id:"db_altibase_counter-tags",level:3},{value:"Field",id:"db_altibase_counter-filed",level:3},...c.d$];function x(e){let t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",section:"section",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Database metrics are a comprehensive collection of database workloads and resource usages. The WhaTap monitoring service continuously collects metrics to identify bottlenecks in the database and provides data to help identify the root causes of performance issues."}),"\n",(0,r.jsxs)(t.p,{children:["For more information about columns, see ",(0,r.jsx)(t.a,{href:"https://altibase.com/en/learn/manuals.php",children:"the link"}),"."]}),"\n","\n",(0,r.jsxs)("div",{className:"metricslist",children:[(0,r.jsx)(n.ZP,{}),(0,r.jsx)(t.section,{className:"remark-sectionize-h2",children:(0,r.jsx)(t.h2,{id:"db_altibase_counter",children:"db_altibase_counter"})}),(0,r.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(t.h3,{id:"db_altibase_counter-tags",children:"Tags"}),(0,r.jsxs)(t.p,{children:["The following lists the tags that are collected in the ",(0,r.jsx)(t.code,{children:"db_altibase_counter"})," category."]}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Tag name"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Remarks"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"dbIsMulti"})}),(0,r.jsx)(t.td,{children:"Whether to support the multitenant or not."}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"dbType"})}),(0,r.jsx)(t.td,{children:"Database type."}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"dbVersion"})}),(0,r.jsx)(t.td,{children:"Version of the database in use."}),(0,r.jsx)(t.td,{children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"oname"})}),(0,r.jsx)(t.td,{children:"Agent name"}),(0,r.jsx)(t.td,{children:"Unique value"})]})]})]})]}),(0,r.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(t.h3,{id:"db_altibase_counter-filed",children:"Field"}),(0,r.jsxs)(t.p,{children:["The following lists the fields that are collected in the ",(0,r.jsx)(t.code,{children:"db_altibase_counter"})," category."]}),(0,r.jsx)("div",{class:"metric",children:(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Metric"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"active_sessions"})}),(0,r.jsx)(t.td,{children:"Number of active sessions."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"base time in second"})}),(0,r.jsx)(t.td,{children:"Value measured as the base time (seconds)."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"byte received via IB"})}),(0,r.jsx)(t.td,{children:"Bytes received via InfiniBand."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"byte received via inet"})}),(0,r.jsx)(t.td,{children:"Bytes received over the Internet."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"byte received via unix domain"})}),(0,r.jsx)(t.td,{children:"Bytes received via the Unix domain."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"byte sent via IB"})}),(0,r.jsx)(t.td,{children:"Bytes transmitted via InfiniBand."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"byte sent via inet"})}),(0,r.jsx)(t.td,{children:"Bytes transmitted over the Internet."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"byte sent via unix domain"})}),(0,r.jsx)(t.td,{children:"Bytes transmitted via the Unix domain."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"connect_error"})}),(0,r.jsx)(t.td,{children:"Number of connection errors occurred."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"cpu_cores"})}),(0,r.jsx)(t.td,{children:"Number of CPU cores of the system."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"data page create"})}),(0,r.jsx)(t.td,{children:"Number of cases a data page has been created."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"data page fix"})}),(0,r.jsx)(t.td,{children:"Number of cases a data page has been modified."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"data page gets"})}),(0,r.jsx)(t.td,{children:"Number of accesses to the data page."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"data page read"})}),(0,r.jsx)(t.td,{children:"Number of cases a data page has been read from disk."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"data page write"})}),(0,r.jsx)(t.td,{children:"Number of cases a data page has been written to disk."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"db file multi page read time waited"})}),(0,r.jsx)(t.td,{children:"Time waited while reading multiple pages."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"db file single page read time waited"})}),(0,r.jsx)(t.td,{children:"Time waited while reading a single page."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"db file single page write time waited"})}),(0,r.jsx)(t.td,{children:"Time waited while writing a single page."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"ddl sync timeout"})}),(0,r.jsx)(t.td,{children:"Timeout time in DDL synchronization."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"ddl timeout"})}),(0,r.jsx)(t.td,{children:"Timeout time in DDL operation."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"delete retry count"})}),(0,r.jsx)(t.td,{children:"Number of retries for delete operation."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"disk table cursor GRID scan count"})}),(0,r.jsx)(t.td,{children:"Number of cases a grid scan cursor has been used on the disk table."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"disk table cursor full scan count"})}),(0,r.jsx)(t.td,{children:"Number of cases a full scan cursor has been opened on the disk table."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"disk table cursor index scan count"})}),(0,r.jsx)(t.td,{children:"Number of cases an index scan cursor has been used on the disk table."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: add hard-prepared plan to plan cache"})}),(0,r.jsx)(t.td,{children:"Time taken to add a hard-prepared plan to the plan cache."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: add hard-rebuild plan to plan cache"})}),(0,r.jsx)(t.td,{children:"Time taken to add a hard-rebuilt plan to the plan cache."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: allocate data slot in DML(disk)"})}),(0,r.jsx)(t.td,{children:"Time spent allocating data slots during DML operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: allocate tss in dml(disk)"})}),(0,r.jsx)(t.td,{children:"Time spent allocating TSS during DML operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: allocate undopage in dml(disk)"})}),(0,r.jsx)(t.td,{children:"Time spent allocating undo pages during DML operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: analyze values in DML(disk)"})}),(0,r.jsx)(t.td,{children:"Time spent analyzing values during DML operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: copying logs to replication log buffer (sender side)"})}),(0,r.jsx)(t.td,{children:"Time taken to copy logs to the replication log buffer."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: create page(disk)"})}),(0,r.jsx)(t.td,{children:"Time taken to create a page on disk."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: creation time for child PCO"})}),(0,r.jsx)(t.td,{children:"Time taken to create a child PCO."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: creation time for new child PCO by rebuild at execution"})}),(0,r.jsx)(t.td,{children:"Time taken to create a new child PCO by a rebuild at runtime."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: creation time for new child PCO by rebuild at soft prepare"})}),(0,r.jsx)(t.td,{children:"Time taken to create a new child PCO by a rebuild at soft preparation."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: creation time for parent PCO"})}),(0,r.jsx)(t.td,{children:"Time taken to create a parent PCO."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: fix page(disk)"})}),(0,r.jsx)(t.td,{children:"Time taken to modify a page on disk."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: get page(disk)"})}),(0,r.jsx)(t.td,{children:"Time taken to fetch pages from disk."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: hard prepare time"})}),(0,r.jsx)(t.td,{children:"Time taken for hard preparation."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: hard rebuild"})}),(0,r.jsx)(t.td,{children:"Time taken for hard rebuild."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: index operation in dml(disk)"})}),(0,r.jsx)(t.td,{children:"Time spent on index operation during DML operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: logical aging by tx in dml(disk)"})}),(0,r.jsx)(t.td,{children:"Time taken on logical aging by transactions during DML operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: matching time for child PCO"})}),(0,r.jsx)(t.td,{children:"Time taken to match a child PCO."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: moving time from cold region to hot region"})}),(0,r.jsx)(t.td,{children:"Time taken to move from cold region to hot region."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: phyical aging by tx in dml(disk)"})}),(0,r.jsx)(t.td,{children:"Time taken on physical aging by transactions during DML operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: privilege checking time during soft prepare"})}),(0,r.jsx)(t.td,{children:"Time taken to check privilege during soft preparation."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: query execute"})}),(0,r.jsx)(t.td,{children:"Time taken to execute query."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: query fetch"})}),(0,r.jsx)(t.td,{children:"Time taken to fetch the query result."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: query optimize"})}),(0,r.jsx)(t.td,{children:"Time taken for query optimization."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: query parse"})}),(0,r.jsx)(t.td,{children:"Time taken to parse the query."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: query validate"})}),(0,r.jsx)(t.td,{children:"Time taken to verify the query."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) aborting transaction(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to abort the transaction."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) beginning transaction(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to start the transaction."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) closing LOB cursor(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to close the LOB cursor."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) closing table cursor(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to close the table cursor."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) committing transaction(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to commit the transaction."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) comparing images to check for conflicts"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to compare images to check for conflicts."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) deleting rows"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to delete the row."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) finish writing LOBs"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to complete writing the LOB."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) inserting rows"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to insert the row."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) opening lob cursor(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to open the LOB cursor."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) opening table cursor(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to open the table cursor."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) performing endian conversion"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to perform endian conversion."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) preparing to write LOB(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to prepare to write the LOB."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) receiving xlogs from sender(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to receive the xlog from the sender."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) sending ACK"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to send an ACK."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) trim LOB(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to trim the LOB."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) updating rows"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to update the row."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: receiver(s) writing LOB piece(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the recipient to write the LOB pieces."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: record lock validation in DML(disk)"})}),(0,r.jsx)(t.td,{children:"Time spent verifying record locks during DML operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: replace(plan cache)"})}),(0,r.jsx)(t.td,{children:"Time taken to replace in the plan cache."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: search time for child PCO"})}),(0,r.jsx)(t.td,{children:"Time taken to search a child PCO."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: search time for parent PCO"})}),(0,r.jsx)(t.td,{children:"Time taken to search a parent PCO."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: sender(s) analyzing logs"})}),(0,r.jsx)(t.td,{children:"Time taken for the sender to analyze the log."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: sender(s) checking whether logs are useful"})}),(0,r.jsx)(t.td,{children:"Time taken for the sender to check the usefulness of the log."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: sender(s) reading logs from log file(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the sender to read the log from the log file."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: sender(s) reading logs from replication log buffer"})}),(0,r.jsx)(t.td,{children:"Time taken for the sender to read the log from the replication log buffer."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: sender(s) receiving ACK from receiver(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the sender to receive the ACK from the recipient."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: sender(s) sending xlogs to receiver(s)"})}),(0,r.jsx)(t.td,{children:"Time taken for the sender to transmit the xlog to the recipient."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: sender(s) setting ACKed value"})}),(0,r.jsx)(t.td,{children:"Time taken for the sender to set the ACKed value."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: sender(s) waiting for new logs"})}),(0,r.jsx)(t.td,{children:"Time taken for the sender to wait for a new log."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: soft prepare"})}),(0,r.jsx)(t.td,{children:"Time taken for soft preparation."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: soft rebuild"})}),(0,r.jsx)(t.td,{children:"Time taken for soft rebuild."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: task schedule"})}),(0,r.jsx)(t.td,{children:"Time taken for task scheduling."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: validation time for child PCO"})}),(0,r.jsx)(t.td,{children:"Time taken to validate a child PCO."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: victim free in replace(plan cache)"})}),(0,r.jsx)(t.td,{children:"Time taken to free the victim from the planned cache replacement."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: waiting time for hard prepare"})}),(0,r.jsx)(t.td,{children:"Time taken to wait for hard preparation."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: waiting time for parent PCO when choosing plan cache replacement victim"})}),(0,r.jsx)(t.td,{children:"Time waited for the parent PCO when selecting a planned cache replacement victim."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"elapsed time: write undo record in DML(disk)"})}),(0,r.jsx)(t.td,{children:"Time spent writing undo records during DML operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"enq: TX - allocate TXSEG entry time waited"})}),(0,r.jsx)(t.td,{children:"Time waited for TXSEG allocation."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"enq: TX - row lock contention, data row time waited"})}),(0,r.jsx)(t.td,{children:"Data row waiting time due to row lock contention."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"execute failure count"})}),(0,r.jsx)(t.td,{children:"Number of query execution failures."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"execute success count"})}),(0,r.jsx)(t.td,{children:"Number of query execution successes."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"execute success count : delete"})}),(0,r.jsx)(t.td,{children:"Number of delete query execution successes."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"execute success count : insert"})}),(0,r.jsx)(t.td,{children:"Number of insert query execution successes."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"execute success count : select"})}),(0,r.jsx)(t.td,{children:"Number of select query execution successes."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"execute success count : update"})}),(0,r.jsx)(t.td,{children:"Number of update query execution successes."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"fetch failure count"})}),(0,r.jsx)(t.td,{children:"Number of query result fetch failures."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"fetch success count"})}),(0,r.jsx)(t.td,{children:"Number of query result fetch successes."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"fetch timeout"})}),(0,r.jsx)(t.td,{children:"Number of query result fetch timeouts."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"idle timeout"})}),(0,r.jsx)(t.td,{children:"Number of idle timeouts."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb LRU list time waited"})}),(0,r.jsx)(t.td,{children:"Latch release waiting time in the DRDB LRU list."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb buffer bcb mutex time waited"})}),(0,r.jsx)(t.td,{children:"Latch free time waited in the DRDB buffer BCB mutex."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb buffer bcb read io mutex time waited"})}),(0,r.jsx)(t.td,{children:"Latch free time waited in the DRDB buffer BCB read IO mutex."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb buffer buffer manager expand mutex time waited"})}),(0,r.jsx)(t.td,{children:"Latch free time waited in the DRDB buffer manager expansion mutex."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb buffer flush manager req job time waited"})}),(0,r.jsx)(t.td,{children:"Time waited for the DRBD buffer flush manager request job."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb buffer flusher min recovery LSN time waited"})}),(0,r.jsx)(t.td,{children:"Time waited for the DRBD buffer flusher's minimum recovery LSN."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb buffer hash mutex time waited"})}),(0,r.jsx)(t.td,{children:"Latch free time waited in the DRDB buffer hash mutex."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb checkpoint list time waited"})}),(0,r.jsx)(t.td,{children:"Latch free waiting time in the DRDB checkpoint list."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb file io time waited"})}),(0,r.jsx)(t.td,{children:"Latch free waiting time in the DRDB file IO."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb flush list time waited"})}),(0,r.jsx)(t.td,{children:"Latch release waiting time in the DRDB flush list."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb page list entry time waited"})}),(0,r.jsx)(t.td,{children:"Latch free waiting time in the DRDB page list."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb prepare list time waited"})}),(0,r.jsx)(t.td,{children:"Latch release waiting time in the DRDB preparation list."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb prepare list wait time waited"})}),(0,r.jsx)(t.td,{children:"Latch free waiting time out of the DRDB preparation list waiting time."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb secondary bcb mutex time waited"})}),(0,r.jsx)(t.td,{children:"Latch free time waited in the DRDB secondary BCB mutex."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb secondary buffer block wait time waited"})}),(0,r.jsx)(t.td,{children:"Latch free waiting time out of the DRDB secondary buffer block waiting time."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb secondary buffer checkpoint list time waited"})}),(0,r.jsx)(t.td,{children:"Latch free waiting time in the DRDB secondary buffer checkpoint list."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb secondary buffer flush block mutex time waited"})}),(0,r.jsx)(t.td,{children:"Latch free waiting time out of the DRDB secondary buffer flush block mutex."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb secondary buffer flush manager req job time waited"})}),(0,r.jsx)(t.td,{children:"Time waited for the DRBD secondary buffer flush manager request job."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb secondary buffer flusher min recovery LSN time waited"})}),(0,r.jsx)(t.td,{children:"Time waited for the DRBD secondary buffer flusher's minimum recovery LSN."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb secondary buffer io time waited"})}),(0,r.jsx)(t.td,{children:"Latch free waiting time in the DRDB secondary buffer IO."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb secondary read io mutex time waited"})}),(0,r.jsx)(t.td,{children:"Latch free time waited in the DRDB secondary read IO mutex."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb tbs creation time waited"})}),(0,r.jsx)(t.td,{children:"Latch free waiting time out of the DRDB TBS creation waiting time."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb tbs list time waited"})}),(0,r.jsx)(t.td,{children:"Latch release waiting time in the DRDB TBS list."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: drdb transaction segment freelist time waited"})}),(0,r.jsx)(t.td,{children:"Latch free waiting time in the DRDB transaction segment freelist."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: others time waited"})}),(0,r.jsx)(t.td,{children:"Latch free waiting time in other jobs."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: plan cache LRU List mutex time waited"})}),(0,r.jsx)(t.td,{children:"Latch free waiting time in the planned cache LRU list mutex."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch free: statement list mutex time waited"})}),(0,r.jsx)(t.td,{children:"Latch free waiting time in the SQL statement list mutex."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch: buffer busy waits time waited"})}),(0,r.jsx)(t.td,{children:"Latch waiting time in the buffer busy waiting time."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch: drdb B-Tree index SMO by other session time waited"})}),(0,r.jsx)(t.td,{children:"Latch waiting time in the DRDB B-tree index SMO waiting time caused by other sessions."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch: drdb B-Tree index SMO time waited"})}),(0,r.jsx)(t.td,{children:"Latch waiting time in the DRDB B-tree index SMO waiting time."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"latch: drdb R-Tree index SMO time waited"})}),(0,r.jsx)(t.td,{children:"Latch waiting time in the DRDB R-tree index SMO waiting time."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"lock acquired count"})}),(0,r.jsx)(t.td,{children:"Number of acquired locks."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"lock released count"})}),(0,r.jsx)(t.td,{children:"Number of released locks."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"lock row retry count"})}),(0,r.jsx)(t.td,{children:"Number of logged in sessions."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"lock_wait_sessions"})}),(0,r.jsx)(t.td,{children:"Number of sessions waiting for lock."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"logon cumulative"})}),(0,r.jsx)(t.td,{children:"Number of cumulative logins."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"logon current"})}),(0,r.jsx)(t.td,{children:"Number of logged in sessions."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"long_running_sessions"})}),(0,r.jsx)(t.td,{children:"Number of long running sessions."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"max time: task schedule"})}),(0,r.jsx)(t.td,{children:"Maximum time taken for task scheduling."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"memory table access count"})}),(0,r.jsx)(t.td,{children:"Number of accesses to the memory table."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"memory table cursor GRID scan count"})}),(0,r.jsx)(t.td,{children:"Number of cases a grid scan cursor has been used on the memory table."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"memory table cursor full scan count"})}),(0,r.jsx)(t.td,{children:"Number of cases a full scan cursor has been opened on the memory table."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"memory table cursor index scan count"})}),(0,r.jsx)(t.td,{children:"Number of cases a index scan cursor has been used on the memory table."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"missing ppco x-trylatch count"})}),(0,r.jsx)(t.td,{children:"Number of missing PPCO x-trylatches."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"obj_invalid_cnt"})}),(0,r.jsx)(t.td,{children:"Number of invalid objects."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"pq_sessions"})}),(0,r.jsx)(t.td,{children:"Number of parallel query sessions."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"prepare failure count"})}),(0,r.jsx)(t.td,{children:"Number of prepare failures."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"prepare success count"})}),(0,r.jsx)(t.td,{children:"Number of prepare successes."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"query timeout"})}),(0,r.jsx)(t.td,{children:"Number of query execution timeouts."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"read IB count"})}),(0,r.jsx)(t.td,{children:"Number of read operations via InfiniBand."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"read socket count"})}),(0,r.jsx)(t.td,{children:"Number of read operations via the socket."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rebuild count"})}),(0,r.jsx)(t.td,{children:"Number of rebuild operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rep_execute success count : delete"})}),(0,r.jsx)(t.td,{children:"Number of replication execution successes in delete operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rep_execute success count : insert"})}),(0,r.jsx)(t.td,{children:"Number of replication execution successes in insert operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rep_execute success count : update"})}),(0,r.jsx)(t.td,{children:"Number of replication execution successes in update operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"replication after commit time waited"})}),(0,r.jsx)(t.td,{children:"Waiting time after committing the replication operation."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"replication before commit time waited"})}),(0,r.jsx)(t.td,{children:"Waiting time before committing the replication operation."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"secondary buffer file multi page read time waited"})}),(0,r.jsx)(t.td,{children:"Time waited for reading multiple pages from the secondary buffer file."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"secondary buffer file single page read time waited"})}),(0,r.jsx)(t.td,{children:"Time waited for reading a single page from the secondary buffer file."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"secondary buffer file single page write time waited"})}),(0,r.jsx)(t.td,{children:"Time waited for writing a single page from the secondary buffer file."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"semop count for receiving via ipc"})}),(0,r.jsx)(t.td,{children:"Number of semop operations received via IPC."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"semop count for sending via ipc"})}),(0,r.jsx)(t.td,{children:"Number of semop operations transmitted via IPC."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"service thread created count"})}),(0,r.jsx)(t.td,{children:"Number of created service threads."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"session commit"})}),(0,r.jsx)(t.td,{children:"Number of session commits."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"session rollback"})}),(0,r.jsx)(t.td,{children:"Number of session rollbacks."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"session terminated"})}),(0,r.jsx)(t.td,{children:"Number of terminated sessions."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"statement rebuild count"})}),(0,r.jsx)(t.td,{children:"Number of SQL rebuilds."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"system internal time waited"})}),(0,r.jsx)(t.td,{children:"Time waited for internal system operations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"total_elapse_time"})}),(0,r.jsx)(t.td,{children:"Total elapsed time."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"total_sessions"})}),(0,r.jsx)(t.td,{children:"Total number of sessions."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undo page create"})}),(0,r.jsx)(t.td,{children:"Number of undo pages created."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undo page fix"})}),(0,r.jsx)(t.td,{children:"Number of undo pages modified."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undo page gets"})}),(0,r.jsx)(t.td,{children:"Number of accesses to the undo page."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undo page read"})}),(0,r.jsx)(t.td,{children:"Number of undo pages read."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undo page write"})}),(0,r.jsx)(t.td,{children:"Number of undo pages written."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"unique violation count"})}),(0,r.jsx)(t.td,{children:"Number of unique violations."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"update retry count"})}),(0,r.jsx)(t.td,{children:"Number of retries for update operation."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"utrans timeout"})}),(0,r.jsx)(t.td,{children:"Number of user transaction timeouts."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"wait_sessions"})}),(0,r.jsx)(t.td,{children:"Number of waiting sessions."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"write IB count"})}),(0,r.jsx)(t.td,{children:"Number of write operations via InfiniBand."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"write redo log bytes"})}),(0,r.jsx)(t.td,{children:"Bytes recorded in the redo log."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"write redo log count"})}),(0,r.jsx)(t.td,{children:"Number of write operations to the redo log."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"write socket count"})}),(0,r.jsx)(t.td,{children:"Number of write operations via the socket."})]})]})]})}),(0,r.jsx)(c.ZP,{})]})]})]})}function j(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},39308:function(e,t,d){d.d(t,{ZP:function(){return c},d$:function(){return s}});var i=d(85893),r=d(50065);let s=[{value:"agent_status_summary",id:"agent_status_summary",level:2},{value:"Fields",id:"agent_status_summary_filed",level:3}];function n(e){let t={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",section:"section",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components},{InDoc:d,Xclude:s}=t;return!d&&l("InDoc",!0),!s&&l("Xclude",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,i.jsx)(t.h2,{id:"agent_status_summary",children:"agent_status_summary"}),(0,i.jsx)(t.p,{children:"This category collects metrics related to agent status every 10 seconds."})]}),"\n",(0,i.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,i.jsx)(t.h3,{id:"agent_status_summary_filed",children:"Fields"}),(0,i.jsx)(s,{product:"server,kubernetes",children:(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Field name"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Unit"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Remarks"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"inActTime"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Millisecond(ms)"}),(0,i.jsx)(t.td,{children:"Amount of time the agent remains inactive"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"isActive"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,i.jsx)(t.td,{children:"Whether the agent is active or not"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"true"})," / ",(0,i.jsx)(t.code,{children:"false"})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"isRestart"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,i.jsx)(t.td,{children:"Whether the agent has been recently restarted"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"true"})," / ",(0,i.jsx)(t.code,{children:"false"})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"lastActTime"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Millisecond(ms)"}),(0,i.jsx)(t.td,{children:"Time when the agent was last activated"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"0"}),": If disabled"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"oid"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,i.jsx)(t.td,{children:"Unique IDs for each agent in the project"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"startTime"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Millisecond(ms)"}),(0,i.jsx)(t.td,{children:"Timestamp when the agent was started."}),(0,i.jsx)(t.td,{children:"-"})]})]})]})}),(0,i.jsxs)(d,{product:"server",children:[(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Field name"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Unit"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Remarks"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"inActTime"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Millisecond(ms)"}),(0,i.jsx)(t.td,{children:"Amount of time the agent remains inactive"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"isActive"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,i.jsx)(t.td,{children:"Whether the agent is active or not"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"true"})," / ",(0,i.jsx)(t.code,{children:"false"})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"isRebooted"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,i.jsx)(t.td,{children:"Whether the server has been recently restarted"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"true"})," / ",(0,i.jsx)(t.code,{children:"false"})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"lastActTime"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Millisecond(ms)"}),(0,i.jsx)(t.td,{children:"Time when the agent was last activated"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"0"}),": If disabled"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"oid"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,i.jsx)(t.td,{children:"Unique IDs for each agent in the project"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"startTime"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Millisecond(ms)"}),(0,i.jsx)(t.td,{children:"Timestamp when the agent was started."}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"status"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,i.jsx)(t.td,{children:"Status of the current agent"}),(0,i.jsx)(t.td,{children:"-"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"uptime"})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Second (sec)"}),(0,i.jsx)(t.td,{children:"Server's uptime"}),(0,i.jsx)(t.td,{children:"-"})]})]})]}),(0,i.jsxs)(t.admonition,{type:"note",children:[(0,i.jsxs)(t.p,{children:["The values \u200B\u200Bin the ",(0,i.jsx)(t.code,{children:"status"})," field are distinguished as follows:"]}),(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"ok"}),": The server is in normal status where it is active."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"inactive"}),": The server is disabled."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"warning"}),": A warning event is in progress on the server."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"fatal"}),": A critical event is in progress on the server."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"paused"}),": The agent has paused data collection."]}),"\n"]}),"\n"]})]})]})]})]})}function c(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(n,{...e})}):n(e)}function l(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},55314:function(e,t,d){d.d(t,{ZP:function(){return c},d$:function(){return s}});var i=d(85893),r=d(50065);let s=[{value:"XOS-related metrics",id:"xosmetrics",level:2}];function n(e){let t={code:"code",h2:"h2",p:"p",section:"section",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,i.jsx)(t.h2,{id:"xosmetrics",children:"XOS-related metrics"}),(0,i.jsx)(t.p,{children:"The following describes the metrics collected from the XOS agent."}),(0,i.jsx)("div",{class:"metric",children:(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Metric"}),(0,i.jsx)(t.th,{children:"Unit"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"cpu(xos)"})}),(0,i.jsx)(t.td,{children:"pct"}),(0,i.jsxs)(t.td,{children:["CPU utilization, ",(0,i.jsx)(t.code,{children:"cpu_user"})," + ",(0,i.jsx)(t.code,{children:"cpu_sys"})," + ",(0,i.jsx)(t.code,{children:"cpu_iowait"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"cpu_user(xos)"})}),(0,i.jsx)(t.td,{children:"pct"}),(0,i.jsx)(t.td,{children:"Time spent for CPU to execute user code."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"cpu_sys(xos)"})}),(0,i.jsx)(t.td,{children:"pct"}),(0,i.jsx)(t.td,{children:"Time spent for CPU to execute the kernel code."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"cpu_iowait(xos)"})}),(0,i.jsx)(t.td,{children:"pct"}),(0,i.jsx)(t.td,{children:"CPU time waited for IO."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"cpu_idle(xos)"})}),(0,i.jsx)(t.td,{children:"pct"}),(0,i.jsx)(t.td,{children:"CPU processor's idle time."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"disk_reads(xos)"})}),(0,i.jsx)(t.td,{children:"block"}),(0,i.jsx)(t.td,{children:"Amount of data read from disk."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"disk_read_bytes(xos)"})}),(0,i.jsx)(t.td,{children:"byte"}),(0,i.jsx)(t.td,{children:"Amount of data read from disk."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"disk_writes(xos)"})}),(0,i.jsx)(t.td,{children:"block"}),(0,i.jsx)(t.td,{children:"Amount of data written to disk."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"disk_write_bytes(xos)"})}),(0,i.jsx)(t.td,{children:"byte"}),(0,i.jsx)(t.td,{children:"Amount of data written to disk."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"mem(xos)"})}),(0,i.jsx)(t.td,{children:"pct"}),(0,i.jsx)(t.td,{children:"Memory utilization."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"mem_total(xos)"})}),(0,i.jsx)(t.td,{children:"MB"}),(0,i.jsx)(t.td,{children:"Total amount of memory."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"mem_free(xos)"})}),(0,i.jsx)(t.td,{children:"MB"}),(0,i.jsx)(t.td,{children:"Amount of memory not in use by the system."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"mem_used(xos)"})}),(0,i.jsx)(t.td,{children:"MB"}),(0,i.jsx)(t.td,{children:"Amount of memory in use by the system."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"mem_buffcache(xos)"})}),(0,i.jsx)(t.td,{children:"MB"}),(0,i.jsx)(t.td,{children:"Amount of memory used by the buff/cache."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"mem_swaptotal(xos)"})}),(0,i.jsx)(t.td,{children:"MB"}),(0,i.jsx)(t.td,{children:"Set this in preparation for the case where the total Swap size and physical memory are insufficient."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"mem_swapfree(xos)"})}),(0,i.jsx)(t.td,{children:"MB"}),(0,i.jsx)(t.td,{children:"Because the unused Swap area and Swap area are secured in disk space, the system performance may drop drastically while using Swap."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"mem_available(xos)"})}),(0,i.jsx)(t.td,{children:"MB"}),(0,i.jsx)(t.td,{children:"Available memory area."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"net_recv_bytes(xos)"})}),(0,i.jsx)(t.td,{children:"byte"}),(0,i.jsx)(t.td,{children:"Amount of data received over the network."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"net_recv_packets(xos)"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"Number of data packets received over the network."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"net_send_bytes(xos)"})}),(0,i.jsx)(t.td,{children:"byte"}),(0,i.jsx)(t.td,{children:"Amount of data transmitted over the network."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"net_send_packets(xos)"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"Number of data packets transmitted over the network."})]})]})]})})]})}function c(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(n,{...e})}):n(e)}},50065:function(e,t,d){d.d(t,{Z:function(){return c},a:function(){return n}});var i=d(67294);let r={},s=i.createContext(r);function n(e){let t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);