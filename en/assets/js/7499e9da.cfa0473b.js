"use strict";(self.webpackChunkWhaTap_Docs=self.webpackChunkWhaTap_Docs||[]).push([["69883"],{99654:function(e,n,t){t.r(n),t.d(n,{metadata:()=>s,contentTitle:()=>c,default:()=>x,assets:()=>l,toc:()=>h,frontMatter:()=>d});var s=JSON.parse('{"id":"altibase-v1/agent-naming","title":"Agent name identification","description":"The following explains how to set the agent name in order to identify the monitoring target.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/altibase-v1/agent-naming.mdx","sourceDirName":"altibase-v1","slug":"/altibase-v1/agent-naming","permalink":"/en/altibase-v1/agent-naming","draft":false,"unlisted":false,"editUrl":"undefined/docs/altibase-v1/agent-naming.mdx","tags":[],"version":"current","frontMatter":{"id":"agent-naming","title":"Agent name identification","description":"The following explains how to set the agent name in order to identify the monitoring target.","keywords":["Altibase","DATABASE","Database Monitoring","Agent","Setting the name"],"isTranslationMissing":false},"sidebar":"altibasev1Sidebar","previous":{"title":"Agent network communication","permalink":"/en/altibase-v1/agent-network"},"next":{"title":"Using AWS CloudWatch","permalink":"/en/altibase-v1/agent-aws"}}'),i=t("85893"),a=t("50065");function r(e){let n={admonition:"admonition",code:"code",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:'In the WhaTap monitoring service, the term, "object" is used for comprehensive meaning of a monitoring target, and it is sometimes used interchangeably with the agent. To distinguish the objects to be monitored, the different names must be used. WhaTap identifies the target through the object name and object ID.'}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The object (agent) names must be unique on a project basis."}),"\n",(0,i.jsx)(n.li,{children:"Object ID = CRC32 (object name). If the object ID or name has been changed, the previous data is not connected."}),"\n"]})}),"\n",(0,i.jsx)(n.p,{children:"WhaTap basically uses the data collected from database servers to identify each server while collecting monitoring data. Basic information uses the database server as a unique identifier by a combination of database server type, IP address, service port, and such. If necessary, use the name set by the user or change the pattern to a unique value. The agent name must be unique."}),"\n",(0,i.jsx)(n.p,{children:"The reason why the data extracted from the application server is used, is like the following. When a communication loss of the collection server and agent caused by the stop of the database server, network disconnection, or agent problem is restored, the continuity of the data from the reconnected agent is maintained."}),"\n",(0,i.jsx)(n.p,{children:"The default pattern used to identify the database server is as follows:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"object_name"})," ",(0,i.jsx)("span",{class:"type",children:"String"})]}),"\n",(0,i.jsxs)(n.p,{children:["Default ",(0,i.jsx)(n.code,{children:"{type}"}),"-",(0,i.jsx)(n.code,{children:"{ip2}"}),"-",(0,i.jsx)(n.code,{children:"{ip3}"}),"-",(0,i.jsx)(n.code,{children:"{port}"})]}),"\n",(0,i.jsx)(n.p,{children:"It is an agent naming (ONAME) scheme to identify database servers. An OID is created based on the ONAME."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Configuration"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"{type}"})}),(0,i.jsxs)(n.td,{children:["Use the value set in ",(0,i.jsx)(n.code,{children:"whatap.app_name"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"{ip0}"})}),(0,i.jsxs)(n.td,{children:["The first byte of the IPv4 address is used. (e.g. ",(0,i.jsx)(n.strong,{children:"10"})," in ",(0,i.jsx)(n.strong,{children:"10"}),".11.12.13)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"{ip1}"})}),(0,i.jsxs)(n.td,{children:["The second byte of the IPv4 address is used. (e.g. ",(0,i.jsx)(n.strong,{children:"11"})," in 10.",(0,i.jsx)(n.strong,{children:"11"}),".12.13)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"{ip2}"})}),(0,i.jsxs)(n.td,{children:["The third byte of the IPv4 address is used. (e.g. ",(0,i.jsx)(n.strong,{children:"12"})," in 10.11.",(0,i.jsx)(n.strong,{children:"12"}),".13)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"{ip3}"})}),(0,i.jsxs)(n.td,{children:["The fourth byte of the IPv4 address is used. (e.g. ",(0,i.jsx)(n.strong,{children:"13"})," in 10.11.12.",(0,i.jsx)(n.strong,{children:"13"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"{port}"})}),(0,i.jsx)(n.td,{children:"Database server port"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"{hostname}"})}),(0,i.jsx)(n.td,{children:"Host name"})]})]})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"auto_oname_enabled"})," ",(0,i.jsx)("span",{class:"type",children:"Boolean"})]}),"\n",(0,i.jsxs)(n.p,{children:["Default ",(0,i.jsx)(n.code,{children:"false"})]}),"\n",(0,i.jsxs)(n.p,{children:["The function to automatically obtain the agent name (oname) from the server is activated. Upon application, the options for ",(0,i.jsx)(n.code,{children:"-Dwhatap.name"})," and ",(0,i.jsx)(n.code,{children:"-Dwhatap.oname"})," are ignored. It obtains ",(0,i.jsx)(n.code,{children:"oname"})," through communication with the collection server and then starts the agent's normal operation."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"auto_oname_prefix"})," ",(0,i.jsx)("span",{class:"type",children:"String"})]}),"\n",(0,i.jsxs)(n.p,{children:["Default ",(0,i.jsx)(n.code,{children:"agent"})]}),"\n",(0,i.jsx)(n.p,{children:"When an agent name is automatically granted from the server, the prefix of the agent name (business name as usual) is used. The prefix + serial number (from 1) is assigned."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"auto_oname_reset"})," ",(0,i.jsx)("span",{class:"type",children:"Int"})]}),"\n",(0,i.jsxs)(n.p,{children:["Default ",(0,i.jsx)(n.code,{children:"0"})]}),"\n",(0,i.jsxs)(n.p,{children:["Modify it to obtain a new agent name from the server. If the agent name is automatically granted, the system environment variable, ",(0,i.jsx)(n.code,{children:"whatap.oname"})," is set. Once set, the system environment variables are not changed until the Java instance is restarted. For a reset, modify the value of ",(0,i.jsx)(n.code,{children:"auto_oname_reset"}),". If you change it to a value different from the current setting, it is to be applied."]}),"\n"]}),"\n"]})]})}function o(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}let d={id:"agent-naming",title:"Agent name identification",description:"The following explains how to set the agent name in order to identify the monitoring target.",keywords:["Altibase","DATABASE","Database Monitoring","Agent","Setting the name"],isTranslationMissing:!1},c=void 0,l={},h=[];function u(e){return(0,i.jsx)(o,{})}function x(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return r}});var s=t(67294);let i={},a=s.createContext(i);function r(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);