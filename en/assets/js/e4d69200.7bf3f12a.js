"use strict";(self.webpackChunkWhaTap_Docs=self.webpackChunkWhaTap_Docs||[]).push([["68749"],{41006:function(e,t,r){r.r(t),r.d(t,{metadata:()=>s,contentTitle:()=>h,default:()=>a,assets:()=>x,toc:()=>o,frontMatter:()=>l});var s=JSON.parse('{"id":"kubernetes/metrics-kubernetes","title":"Kubernetes metrics","description":"It guides you to the metrics collected by Kubernetes.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/kubernetes/metrics-kubernetes.mdx","sourceDirName":"kubernetes","slug":"/kubernetes/metrics-kubernetes","permalink":"/en/kubernetes/metrics-kubernetes","draft":false,"unlisted":false,"editUrl":"undefined/docs/kubernetes/metrics-kubernetes.mdx","tags":[],"version":"current","frontMatter":{"id":"metrics-kubernetes","title":"Kubernetes metrics","description":"It guides you to the metrics collected by Kubernetes.","toc_max_heading_level":2,"keywords":["Metrics","Kubernetes","Kubernetes Monitoring"],"isTranslationMissing":false},"sidebar":"kubeSidebar","previous":{"title":"Metrics","permalink":"/en/kubernetes/metrics-intro"},"next":{"title":"Metrics Search","permalink":"/en/kubernetes/metrics-search"}}'),d=r("85893"),n=r("50065");function i(e){let t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",section:"section",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.p,{children:"Some metrics collected by Kubernetes are the same as those of server and application monitoring."}),"\n",(0,d.jsxs)("div",{class:"metricslist-k8s",children:[(0,d.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,d.jsxs)(t.h2,{id:"container",children:["Container(",(0,d.jsx)(t.code,{children:"container"}),") metric"]}),(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"container"})," category collects all custom labels set on the container's pods as tags."]}),(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsx)(t.li,{children:"Target: Cluster project, Namespace project"}),"\n",(0,d.jsx)(t.li,{children:"Collection interval: 5 seconds"}),"\n",(0,d.jsx)(t.li,{children:"Statistical data: 5 minutes"}),"\n"]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"container-tags",children:"Tags"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Tag name"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{style:{textAlign:"center"},children:"Remarks"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"agentOid"}),(0,d.jsx)(t.td,{children:"Node agent's unique ID"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"Unique value"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"agentPcode"}),(0,d.jsx)(t.td,{children:"pcode"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"Unique value"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"command"}),(0,d.jsx)(t.td,{children:"Execution command"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"containerId"}),(0,d.jsx)(t.td,{children:"Container ID"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"Unique value"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"containerKey"}),(0,d.jsx)(t.td,{children:"Container key"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"created"}),(0,d.jsx)(t.td,{children:"Time stamp generated by the container"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"image"}),(0,d.jsx)(t.td,{children:"Container image name"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"imageHash"}),(0,d.jsx)(t.td,{children:"Image hash value"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"imageId"}),(0,d.jsx)(t.td,{children:"Image ID"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"k8s-app"}),(0,d.jsx)(t.td,{children:"Value for the pod's label k8s-app"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"microOid"}),(0,d.jsx)(t.td,{children:"Unique ID of the WhaTap APM agent installed in the container"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"name"}),(0,d.jsx)(t.td,{children:"Container name"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"namespace"}),(0,d.jsx)(t.td,{children:"Namespace to which the container belongs"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"namespaceHash"}),(0,d.jsx)(t.td,{children:"Hash value of the namespace to which the container belongs"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"okind"}),(0,d.jsx)(t.td,{children:"Unique ID of OKIND specified in the WhaTap APM agent installed in the container"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"okindName"}),(0,d.jsx)(t.td,{children:"Name of OKIND specified in the WhaTap APM agent installed in the container"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"oname"}),(0,d.jsx)(t.td,{children:"Name of the WhaTap APM agent installed in the container"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"onode"}),(0,d.jsx)(t.td,{children:"Unique ID of the node agent on which the container is running"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"onodeName"}),(0,d.jsx)(t.td,{children:"Node name on which the container is running"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"podHash"}),(0,d.jsx)(t.td,{children:"Hash value of the container's Pod"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"podName"}),(0,d.jsx)(t.td,{children:"Container's Pod name"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"replicaSetHash"}),(0,d.jsx)(t.td,{children:"Hash value of the container's replica set"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"replicaSetName"}),(0,d.jsx)(t.td,{children:"Name of the container's replica set"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"whatap_project"}),(0,d.jsx)(t.td,{children:"Name of the WhaTap project to which the container belongs"}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"container-fields",children:"Fields"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field name"}),(0,d.jsx)(t.th,{children:"Unit"}),(0,d.jsx)(t.th,{children:"Shortname, Name, Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"blkio_rbps"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"IoReadBytes"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Block I/O Read Byte"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Sum of bytes read per second across all block devices in the container"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"blkio_riops"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"IoReadIops"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Block I/O Read IOPS"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Sum of counts read per second across all block devices in the container"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"blkio_wbps"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"IoWriteBytes"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Block I/O Write Byte"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Sum of bytes written per second across all block devices in the container"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"blkio_wiops"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"IoWriteIops"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Block I/O Write IOPS"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Sum of counts written per second across all block devices in the container"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_per_quota"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"CpuByLimit"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Usage by Limit (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU utilization by limit"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_quota"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Millicore"}),(0,d.jsx)(t.td,{children:"CpuLimit"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Limit (core)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:["Container CPU Limit Quota ",(0,d.jsx)("br",{})," If the limit is not set, the total CPU cores of the node where the container is running appears in millicores."]})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_quota_percent"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"CpuLimitByNode"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Limit by Node (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:["Container CPU Limit Quota against Node CPU",(0,d.jsx)("br",{})," If the limit is not set, the total CPU cores of the node where the container is running appears in percentage."]})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_sys"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"CpuSysByNode"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Sys Usage by Node (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU System Utilization against Node CPU"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_throttledperiods"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"CpuThrottledCnt"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Throttling Count"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Throttled Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_throttledtime"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Nanosecond"}),(0,d.jsx)(t.td,{children:"CpuThrottledTime"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Throttling Time"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Throttled Time"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_total"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"CpuByNode"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Usage by Node (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Utilization against Node CPU"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_total_milli"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Millicore"}),(0,d.jsx)(t.td,{children:"CpuTotUsage"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Usage (millicore)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Usage"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_user"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"CpuUserByNode"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU User Usage by Node (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU User Utilization against Node CPU"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_request"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Millicore"}),(0,d.jsx)(t.td,{children:"CpuRequest"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Request (core)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Request"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_per_request"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"CpuByRequest"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU Usage by Request (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:["Utilization against Container CPU Request",(0,d.jsx)("br",{}),"= cpu_total_milli/cpu_request * 100"]})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_failcnt"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"MemFailCnt"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Failure Count"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Limit reached Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_limit"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemLimit"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Limit (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Limit Size"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_maxusage"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemMaxUsage"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Max Usage (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Recorded Value for Container Memory Maximum Usage"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_percent"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"MemWsByLimit"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Working Set by Limit (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:["Working Set Usage based on Container Memory Limit",(0,d.jsx)("br",{}),"= mem_usage/mem_limit * 100"]})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_totalcache"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemTotCache"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Total Cache (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container's Total Cache Size"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_totalpgfault"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"MemTotPageFaultCnt"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Total Page Fault Count"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container's Page Fault Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_totalrss"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemTotRss"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Total RSS (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container's Total RSS Memory Size"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_totalrss_percent"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"MemTotRssByLimit"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Total RSS By Limit (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container's Total RSS Memory Utilization"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_totalunevictable"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemTotUnevictable"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Total Unevictable (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container's Total Unevictable Memory Size"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_usage"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemUsage"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Usage (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Usage"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_working_set"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemWs"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Working Set (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:["Container memory working set",(0,d.jsx)("br",{}),"= mem_usage - inactive file"]})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_working_set_percent"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"MemWsByLimit"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Working Set by Limit (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:["Working Set Usage based on Container Memory Limit",(0,d.jsx)("br",{}),"= mem_usage/mem_limit * 100"]})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_request"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemRequest"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Request (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Request Size"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_per_request"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"MemWsByRequest"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Memory Working Set by Request (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:["Working Set Usage based on Container Memory Request",(0,d.jsx)("br",{}),"= mem_working_set / mem_request * 100"]})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_rbps"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"NetRxBytes"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Receive Byte"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Sum of bytes read per second across all block devices in the container"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_rdropped"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"NetRxDropped"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Receive Dropped"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Receive Dropped Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_rerror"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"NetRxError"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Receive Error"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Receive Error Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_riops"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"NetRxIops"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Receive IOPS"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Receive Error Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_wbps"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"NetTxByes"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Transmit Byte"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Transmit Data Size"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_wdropped"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"NetTxDropped"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Transmit Dropped"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Transmit Dropped Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_werror"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"NetTxError"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Transmit Error"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Transmit Error Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_wiops"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"NetTxIops"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Transmit IOPS"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Network Transmit Error Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"node_cpu"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"ConNodeCpu"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Work Node CPU Usage (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"CPU Usage of the Node where the container is running"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"node_mem"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"ConNodeMem"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Work Node Memory Usage (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Memory Usage of the Node where the container is running"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"phase"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsxs)(t.td,{children:["Pod lifecycle ",(0,d.jsx)("br",{})," \u2460 PENDING",(0,d.jsx)("br",{})," \u2461 RUNNING ",(0,d.jsx)("br",{}),"\u2462 SUCCEEDED ",(0,d.jsx)("br",{}),"\u2463 FAILED ",(0,d.jsx)("br",{}),"\u2464 UNKNOWN"]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"restart_count"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Positive number"}),(0,d.jsx)(t.td,{children:"ConRestartCnt"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Restart Count"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Restart Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"state"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Positive number"}),(0,d.jsx)(t.td,{children:"ConState"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Current State"})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:["Container State Code",(0,d.jsx)("br",{}),"\u2460 RUNNING = 114",(0,d.jsx)("br",{}),"\u2461 PAUSE = 112",(0,d.jsx)("br",{}),"\u2462 RESTARTING = 101",(0,d.jsx)("br",{}),"\u2463 OOMKILLED = 111M",(0,d.jsx)("br",{}),"\u2464 DEAD = 100",(0,d.jsx)("br",{}),"\u2465 WAITING = 119"]})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"status"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"String"}),(0,d.jsx)(t.td,{children:"ConStatus"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container Current Status"})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:["Container State Information",(0,d.jsx)("br",{}),"\u2460 running: Displays the uptime information",(0,d.jsx)("br",{}),"\u2461 waiting/terminated: Displays the reason of the state"]})})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,d.jsxs)(t.h2,{id:"kube_node",children:["Kubernetes node (",(0,d.jsx)(t.code,{children:"kube_node"}),") metric"]}),(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"kube_node"})," category collects all custom labels set on the node as tags."]}),(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsx)(t.li,{children:"Target: Cluster project, Namespace project"}),"\n",(0,d.jsx)(t.li,{children:"Collection interval: 5 seconds"}),"\n",(0,d.jsx)(t.li,{children:"Statistical data: 5 minutes, 1 hour"}),"\n"]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_node-tags",children:"Tags"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Tag name"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"nodeName"}),(0,d.jsx)(t.td,{children:"Node name"}),(0,d.jsx)(t.td,{children:"-"})]})})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_node-fields",children:"Fields"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field name"}),(0,d.jsx)(t.th,{children:"Unit"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"allocatable_cpu"}),(0,d.jsx)(t.td,{children:"Millicore"}),(0,d.jsx)(t.td,{children:"CPU size that can be assigned to node"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"allocatable_memory"}),(0,d.jsx)(t.td,{children:"Byte"}),(0,d.jsx)(t.td,{children:"Memory size that can be assigned to node"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"allocatable_pods"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Number of Pods that can be assigned to node"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"limit_cpu"}),(0,d.jsx)(t.td,{children:"Millicore"}),(0,d.jsx)(t.td,{children:"Sum of node CPU limits"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"limit_memory"}),(0,d.jsx)(t.td,{children:"Byte"}),(0,d.jsx)(t.td,{children:"Sum of node memory limits"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"pods"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Total number of node Pods"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"request_cpu"}),(0,d.jsx)(t.td,{children:"Millicore"}),(0,d.jsx)(t.td,{children:"Sum of node CPU requests"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"request_memory"}),(0,d.jsx)(t.td,{children:"Byte"}),(0,d.jsx)(t.td,{children:"Sum of node memory requests"}),(0,d.jsx)(t.td,{children:"-"})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,d.jsxs)(t.h2,{id:"kube_event",children:["Kubernetes event (",(0,d.jsx)(t.code,{children:"kube_event"}),") metric"]}),(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"kube_event"})," category collects cluster-wide data for cluster projects, and collects data only for events that occurred in the namespace for namespace projects."]}),(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsx)(t.li,{children:"Target: Cluster project, Namespace project"}),"\n",(0,d.jsx)(t.li,{children:"Collection interval: 5 seconds"}),"\n",(0,d.jsx)(t.li,{children:"Statistical data: 5 minutes, 1 hour"}),"\n"]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_event-tags",children:"Tags"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Tag name"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"field_path"}),(0,d.jsx)(t.td,{children:"Field Path"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"kind"}),(0,d.jsx)(t.td,{children:"Type"}),(0,d.jsx)(t.td,{children:"Object type on which the event occurred"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"name"}),(0,d.jsx)(t.td,{children:"Object name"}),(0,d.jsx)(t.td,{children:"Kubernetes object name on which the event occurred"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"namespace"}),(0,d.jsx)(t.td,{children:"Namespace name"}),(0,d.jsx)(t.td,{children:"Namespace on which the event occurred"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"reason"}),(0,d.jsx)(t.td,{children:"Event occurrence cause"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"type"}),(0,d.jsx)(t.td,{children:"Event type"}),(0,d.jsx)(t.td,{children:"Warning or normal"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"uid"}),(0,d.jsx)(t.td,{children:"UID"}),(0,d.jsx)(t.td,{children:"Object on which the event occurred"})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_event-fields",children:"Fields"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field name"}),(0,d.jsx)(t.th,{children:"Unit"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"action"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"Action name"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"count"}),(0,d.jsx)(t.td,{children:"Count"}),(0,d.jsx)(t.td,{children:"Event occurrence count"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"event_time"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Time stamp for the first event"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"first_timestamp"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"First event occurrence time"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"last_timestamp"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Last event occurrence time"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"message"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"Event Message"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"reasonFiled"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"Event reason"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"reporting_component"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"Component that reports the current event"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"reporting_instance"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"Instance that reports the current event"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"series_last_observed_time"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Series last observed time"}),(0,d.jsx)(t.td,{children:"-"})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,d.jsxs)(t.h2,{id:"kube_stat",children:["Kubernetes Cluster (",(0,d.jsx)(t.code,{children:"kube_stat"}),") metric"]}),(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"kube_stat"})," category collects all the clusters for the cluster project, and the namespace projects collects objects associated with the namespace."]}),(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsx)(t.li,{children:"Target: Cluster project, Namespace project"}),"\n",(0,d.jsx)(t.li,{children:"Collection interval: 5 seconds"}),"\n",(0,d.jsx)(t.li,{children:"Statistical data: 5 minutes, 1 hour"}),"\n"]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_stat-tags",children:"Tags"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Tag name"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"name"}),(0,d.jsx)(t.td,{children:"kube_stat"}),(0,d.jsx)(t.td,{children:"Fixed value"})]})})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_stat-fields",children:"Fields"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field name"}),(0,d.jsx)(t.th,{children:"Unit"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"alloctable_cpu"}),(0,d.jsx)(t.td,{children:"Millicore"}),(0,d.jsx)(t.td,{children:"Number of cluster cores"}),(0,d.jsx)(t.td,{children:"Cluster project only"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"alloctable_ephemeral-storage"}),(0,d.jsx)(t.td,{children:"Byte"}),(0,d.jsx)(t.td,{children:"Ephemeral storage that can be allocated to all clusters"}),(0,d.jsx)(t.td,{children:"Cluster project only"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"alloctable_hugepages-1gi"}),(0,d.jsx)(t.td,{children:"Byte"}),(0,d.jsx)(t.td,{children:"Hugepages-1Gi that can be allocated to all clusters"}),(0,d.jsx)(t.td,{children:"Cluster project only"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"alloctable_hugepages-2mi"}),(0,d.jsx)(t.td,{children:"Byte"}),(0,d.jsx)(t.td,{children:"Hugepages-2Gi that can be allocated to all clusters"}),(0,d.jsx)(t.td,{children:"Cluster project only"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"alloctable_memory"}),(0,d.jsx)(t.td,{children:"Byte"}),(0,d.jsx)(t.td,{children:"Memory that can be allocated to all clusters"}),(0,d.jsx)(t.td,{children:"Cluster project only"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"alloctable_pods"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Number of pods that can be allocated"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"available_pod"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Number of pods whose phase is in Running state"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"2",children:"desired_pod"}),(0,d.jsx)(t.td,{rowSpan:"2",children:"Positive number"}),(0,d.jsxs)(t.td,{children:["Sum of the number of pods deployed without ",(0,d.jsx)(t.code,{children:"metadata.ownerReferences"})," and the number of desired pods defined in Kubernetes objects (ReplicaSet, Daemonset, StatefulSet)"]}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:["Same as the number of pods retrieved by ",(0,d.jsx)(t.code,{children:"kubectl get pods -A"})]}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"nodes"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Number of nodes"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"pod_phase_Pending"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Number of pending pods"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"pod_phase_Running"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Number of running pods"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"running_containers"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Number of running containers"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"stopped_containers"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Number of stopped containers"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"total_available_cpu"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Total allocatable CPU"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"total_available_memory"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Total sum of allocatable memory"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"total_limit_cpu"}),(0,d.jsx)(t.td,{children:"Millicore"}),(0,d.jsx)(t.td,{children:"Total sum of limit CPU"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"total_limit_memory"}),(0,d.jsx)(t.td,{children:"Byte"}),(0,d.jsx)(t.td,{children:"Total sum of limit memory"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"total_request_cpu"}),(0,d.jsx)(t.td,{children:"Millicore"}),(0,d.jsx)(t.td,{children:"Total sum of request CPU"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"total_request_memory"}),(0,d.jsx)(t.td,{children:"Byte"}),(0,d.jsx)(t.td,{children:"Total sum of request memory"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"unavailable_pod"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Number of pods whose phase is not in Running state (Pending, Failed, Succedded)"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"waiting_containers"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Waiting container count"}),(0,d.jsx)(t.td,{children:"-"})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,d.jsxs)(t.h2,{id:"kube_pod",children:["Pod (",(0,d.jsx)(t.code,{children:"kube_pod"}),") metric"]}),(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"kube_pod"})," category collects all custom labels set on the Pod as tags."]}),(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsx)(t.li,{children:"Target: Master (cluster) project, Namespace project"}),"\n",(0,d.jsx)(t.li,{children:"Collection interval: 5 seconds"}),"\n",(0,d.jsx)(t.li,{children:"Statistical data: 5 minutes"}),"\n"]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_pod-tags",children:"Tags"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Tag name"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"agentOid"}),(0,d.jsx)(t.td,{children:"Node agent's unique ID"}),(0,d.jsx)(t.td,{children:"Unique value"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"agentPcode"}),(0,d.jsx)(t.td,{children:"pcode"}),(0,d.jsx)(t.td,{children:"Unique value"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"command"}),(0,d.jsx)(t.td,{children:"Execution command"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"containerIds"}),(0,d.jsx)(t.td,{children:"Container ID that belongs to the pod"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"containerIdsCount"}),(0,d.jsx)(t.td,{children:"Number of containerIds"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"containerKeys"}),(0,d.jsx)(t.td,{children:"Hash value for the container ID that belongs to the pod"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"containerKeysCount"}),(0,d.jsx)(t.td,{children:"Number of containerKeys"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"DaemonSet"}),(0,d.jsx)(t.td,{children:"DaemonSet name of the pod"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Deployment"}),(0,d.jsx)(t.td,{children:"Deployment"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"k8s-app"}),(0,d.jsx)(t.td,{children:"Value for the pod's label k8s-app"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"microOid"}),(0,d.jsx)(t.td,{children:"ID of the agent running on the applications inside the pod's container."}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"microOids"}),(0,d.jsx)(t.td,{children:"Multiple IDs of the agents running on applications inside multiple containers in the pod"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"microOidsCount"}),(0,d.jsx)(t.td,{children:"Number of microOids"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"name"}),(0,d.jsx)(t.td,{children:"Pod Name"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"onames"}),(0,d.jsx)(t.td,{children:"Name of the agent running on the applications inside the pod's container."}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"onamesCount"}),(0,d.jsx)(t.td,{children:"Number of onames"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"podName"}),(0,d.jsx)(t.td,{children:"Pod Name"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"namespace"}),(0,d.jsx)(t.td,{children:"Namespace to which the Pod belongs"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"namespaceHash"}),(0,d.jsx)(t.td,{children:"Hash value of the namespace to which the Pod belongs"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"replicaSetHash"}),(0,d.jsx)(t.td,{children:"Hash value of ReplicaSet of the Pod"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"replicaSetName"}),(0,d.jsx)(t.td,{children:"ReplicaSet name of the Pod"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"whatap_project"}),(0,d.jsx)(t.td,{children:"Name of the WhaTap project to which the Pod belongs"}),(0,d.jsx)(t.td,{children:"-"})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_pod-fields",children:"Fields"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field name"}),(0,d.jsx)(t.th,{children:"Unit"}),(0,d.jsx)(t.th,{children:"(Shortname, Name, Description)"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"blkio_rbps"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"IoReadBytes"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Block I/O Read Byte"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Sum of bytes read per second across all block devices in the Pod"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"blkio_riops"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"IoReadIops"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Block I/O Read IOPS"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Sum of cases read per second across all block devices in the Pod"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"blkio_wbps"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"IoWriteBytes"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Block I/O Write Byte"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Sum of bytes written per second across all block devices in the Pod"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"blkio_wiops"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"IoWriteIops"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Block I/O Write IOPS"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Sum of cases written per second across all block devices in the Pod"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_per_limit"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"CpuByLimit"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Usage by Limit (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Container CPU utilization by limit"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_per_request"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"CpuByRequest"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Usage by Request (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Total CPU utilization based on the CPU requests"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_quota_percent"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"CpuLimitByNode"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Limit by Node (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:["Pod CPU limit quota against node CPU",(0,d.jsx)("br",{}),"If the limit is not set, the total CPU cores of the node where the Pod is running appears in percentage."]})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_sys"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"CpuSysByNode"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Sys Usage by Node (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU System Utilization against Node CPU"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_throttledperiods"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"CpuThrottledCnt"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Throttling Count"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Throttled Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_throttledtime"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Nanosecond"}),(0,d.jsx)(t.td,{children:"CpuThrottledTime"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Throttling Time"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Throttled Time"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_total"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"CpuByNode"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Usage by Node (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Utilization against Node CPU"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_total_milli"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Millicore"}),(0,d.jsx)(t.td,{children:"CpuTotUsage"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Usage (millicore)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU usage"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_user"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"CpuUserByNode"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU User Usage by Node (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU User Utilization against Node CPU"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_request"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Millicore"}),(0,d.jsx)(t.td,{children:"CpuRequest"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Request (core)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Request"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"cpu_per_request"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"CpuByRequest"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod CPU Usage by Request (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:["Utilization against Pod CPU Request",(0,d.jsx)("br",{}),"= cpu_total_milli/cpu_request * 100"]})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_totalcache"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemTotCache"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Memory Total Cache (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Total Pod Cache Size"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_totalpgfault"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"MemTotPageFaultCnt"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Memory Total Page Fault Count"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod's Page Fault Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_totalrss"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemTotRss"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Memory Total RSS (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod's Total RSS Memory Size"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_totalrss_percent"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"MemTotRssByLimit"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Memory Total RSS by Limit (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod's Total RSS Memory Utilization"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_totalunevictable"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemTotUnevictable"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Memory Total Unevictable (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod's Total Unevictable Memory Size"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_usage"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemUsage"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Memory Usage (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Memory Usage"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"mem_working_set"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemWs"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Memory Working Set (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:["Pod Memory working set",(0,d.jsx)("br",{}),"= mem_usage - inactive file"]})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"memory_request"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemRequest"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Memory Request (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod memory requests"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"memory_limit"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"MemLimit"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Memory Limit (byte)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod memory limit quota"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"memory_per_request"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"MemByRequest"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Memory Working Set by Request (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Working Set usage based on the Pod memory request"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"memory_per_limit"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Percent"}),(0,d.jsx)(t.td,{children:"MemByLimit"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Memory Working Set by Limit (%)"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Working Set usage based on the Pod memory limit"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_rbps"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"NetRxBytes"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Receive Byte"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Sum of bytes read per second across all block devices in the Pod"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_rdropped"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"NetRxDropped"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Receive Dropped"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Receive Dropped Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_rerror"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"NetRxError"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Receive Error"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Receive Error Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_riops"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"NetRxIops"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Receive IOPS"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Receive Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_wbps"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Byte"}),(0,d.jsx)(t.td,{children:"NetTxByes"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Transmit Byte"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Transmit Data Size"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_wdropped"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"NetTxDropped"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Transmit Dropped"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Transmit Dropped Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_werror"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"NetTxError"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Transmit Error"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Transmit Error Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"network_wiops"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"Count"}),(0,d.jsx)(t.td,{children:"NetTxIops"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Transmit IOPS"})}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Network Transmit Count"})}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"3",children:"phase"}),(0,d.jsx)(t.td,{rowSpan:"3",children:"String"}),(0,d.jsx)(t.td,{children:"Phase"})]}),(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.td,{children:"Pod Current Phase"})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:["Pod lifecycle ",(0,d.jsx)("br",{})," \u2460 PENDING",(0,d.jsx)("br",{})," \u2461 RUNNING ",(0,d.jsx)("br",{}),"\u2462 SUCCEEDED ",(0,d.jsx)("br",{}),"\u2463 FAILED ",(0,d.jsx)("br",{}),"\u2464 UNKNOWN"]})})]})]}),(0,d.jsx)(t.p,{children:"The following fields are reserved for internal use."}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field name"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"kube_sless_normal"}),(0,d.jsx)(t.td,{children:"Number of Kubernetes informative events"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"kube_sless_warning"}),(0,d.jsx)(t.td,{children:"Number of Kubernetes warning events"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"micro_sful_critical"}),(0,d.jsx)(t.td,{children:"Number of APM events that are critical"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"micro_sful_info"}),(0,d.jsx)(t.td,{children:"APM informative event count"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"micro_sful_warning"}),(0,d.jsx)(t.td,{children:"APM warning event count"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"micro_sless_critical"}),(0,d.jsx)(t.td,{children:"Number of APM events that are not critical"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"micro_sless_info"}),(0,d.jsx)(t.td,{children:"Number of APM events that are not informative"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"micro_sless_warning"}),(0,d.jsx)(t.td,{children:"Number of APM events that are not for warning"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"sful_critical"}),(0,d.jsx)(t.td,{children:"Number of events that are critical in the metric"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"sful_info"}),(0,d.jsx)(t.td,{children:"Number of events that are informative in the metric"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"sful_warning"}),(0,d.jsx)(t.td,{children:"Number of events that are for warning in the metric"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"sless_critical"}),(0,d.jsx)(t.td,{children:"Number of events that are not critical in the metric"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"sless_info"}),(0,d.jsx)(t.td,{children:"Number of events that are not informative in the metric"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"sless_warning"}),(0,d.jsx)(t.td,{children:"Number of events that are not for warning in the metric"}),(0,d.jsx)(t.td,{children:"-"})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,d.jsxs)(t.h2,{id:"kube_pod_stat",children:["Kubernetes Pod Statistics (",(0,d.jsx)(t.code,{children:"kube_pod_stat"}),") metric"]}),(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"kube_pod_stat"})," category cluster project collects data for all clusters, and the namespace project collects data only for pods that belong to the namespace."]}),(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsx)(t.li,{children:"Target: Cluster project, Namespace project"}),"\n",(0,d.jsx)(t.li,{children:"Collection interval: 5 seconds"}),"\n",(0,d.jsx)(t.li,{children:"Statistical data: 5 minutes, 1 hour"}),"\n"]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_pod_stat-tags",children:"Tags"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Tag name"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"kind"}),(0,d.jsx)(t.td,{children:"Type"}),(0,d.jsx)(t.td,{children:"The cluster project has cluster as the fixed value, and the namespace projects collect only for Deployment or ReplicaSet."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"name"}),(0,d.jsx)(t.td,{children:"Kubernetes resource name"}),(0,d.jsx)(t.td,{children:"The cluster project has no name value and the namespace projects have the name for Deployment or ReplicaSet."})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_pod_stat-fields",children:"Fields"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field name"}),(0,d.jsx)(t.th,{children:"Unit"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"available_pod"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Number of pods whose phase is in Running state"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{rowSpan:"2",children:"desired_pod"}),(0,d.jsx)(t.td,{rowSpan:"2",children:"Positive number"}),(0,d.jsxs)(t.td,{children:["Sum of the number of pods deployed without ",(0,d.jsx)(t.code,{children:"metadata.ownerReferences"})," and the number of desired pods defined in Kubernetes objects (ReplicaSet, Daemonset, StatefulSet)"]}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:["Same as the number of pods retrieved by ",(0,d.jsx)(t.code,{children:"kubectl get pods -A"})]}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"limit_cpu"}),(0,d.jsx)(t.td,{children:"Millicore"}),(0,d.jsx)(t.td,{children:"CPU Limit Usage"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"limit_memory"}),(0,d.jsx)(t.td,{children:"Byte"}),(0,d.jsx)(t.td,{children:"Memory Limit Usage"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"request_cpu"}),(0,d.jsx)(t.td,{children:"Millicore"}),(0,d.jsx)(t.td,{children:"CPU Request Usage"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"request_memory"}),(0,d.jsx)(t.td,{children:"Byte"}),(0,d.jsx)(t.td,{children:"Memory Request Usage"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"running_container"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Running Container Count"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"stopped_container"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Stopped Container Count"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"waiting_container"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Waiting container count"}),(0,d.jsx)(t.td,{children:"-"})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,d.jsxs)(t.h2,{id:"kube_hpa_stat",children:["Kubernetes Horizontal Pod Autoscaler (HPA) (",(0,d.jsx)(t.code,{children:"kube_hpa_stat"}),") metric"]}),(0,d.jsx)(t.p,{children:"Metric collection starts only when HPA is added to the ClusterRole used by WhaTap."}),(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsx)(t.li,{children:"Target: Cluster project"}),"\n",(0,d.jsx)(t.li,{children:"Collection interval: 5 seconds"}),"\n",(0,d.jsx)(t.li,{children:"Statistical data: 5 minutes, 1 hour"}),"\n"]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_hpa_stat-tags",children:"Tags"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Tag name"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"name"}),(0,d.jsx)(t.td,{children:"HPA name"}),(0,d.jsx)(t.td,{children:"-"})]})})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_hpa_stat-fields",children:"Fields"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field name"}),(0,d.jsx)(t.th,{children:"Unit"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"currentReplicas"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Current Replica Count"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"desiredReplicas"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Desired Replica Count"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"lastScaleTime"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Last scaled TimeStamp"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxReplicas"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Maximum Replica Count"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"minReplicas"}),(0,d.jsx)(t.td,{children:"Positive number"}),(0,d.jsx)(t.td,{children:"Minimum Replica Count"}),(0,d.jsx)(t.td,{children:"-"})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,d.jsxs)(t.h2,{id:"kube_process",children:["Process (",(0,d.jsx)(t.code,{children:"kube_process"}),") metrics"]}),(0,d.jsxs)(t.admonition,{type:"note",children:[(0,d.jsx)(t.mdxAdmonitionTitle,{}),(0,d.jsxs)(t.p,{children:["Kubernetes agent 1.7.12 or later is required. For more information about agent updates, see ",(0,d.jsx)(t.a,{href:"agent-update",children:"the following"}),"."]})]}),(0,d.jsx)(t.p,{children:"Kubernetes-related processes that exist in the node are collected during monitoring."}),(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsxs)(t.li,{children:["\n",(0,d.jsx)(t.p,{children:"Target: Cluster project, Namespace project"}),"\n"]}),"\n",(0,d.jsxs)(t.li,{children:["\n",(0,d.jsx)(t.p,{children:"Collection interval: 5 seconds"}),"\n"]}),"\n",(0,d.jsxs)(t.li,{children:["\n",(0,d.jsx)(t.p,{children:"Statistical data: 5 minutes"}),"\n"]}),"\n"]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_process_stat-tags",children:"Tags"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Tag name"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ppid"}),(0,d.jsx)(t.td,{children:"Parent process ID"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"/proc/[pid]/status::PPid"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"pid"}),(0,d.jsx)(t.td,{children:"Process ID"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"/proc/[pid]/status::Pid"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cmd1"}),(0,d.jsx)(t.td,{children:"Command name"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"/proc/[pid]/status::Name"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cmd2"}),(0,d.jsx)(t.td,{children:"Command line (full command and arguments)"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"/proc/[pid]/cmdline"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"user"}),(0,d.jsx)(t.td,{children:"User ID or username"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"/proc/[pid]/status::Uid"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"onodeName"}),(0,d.jsx)(t.td,{children:"Node name of the process"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsxs)(t.td,{children:["Environment variable of the container system (",(0,d.jsx)(t.code,{children:"NODE_IP"}),")"]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"createTime"}),(0,d.jsx)(t.td,{children:"Process start time"}),(0,d.jsx)(t.td,{children:"Timestamp"}),(0,d.jsx)(t.td,{children:"Field calculated through /proc/uptime"})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_process_stat-fields",children:"Fields"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field name"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Unit"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cpu"}),(0,d.jsx)(t.td,{children:"CPU Utilization"}),(0,d.jsx)(t.td,{children:"Percent (%)"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{children:"Field calculated through /proc/[pid]/stat"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"memory"}),(0,d.jsx)(t.td,{children:"Memory utilization"}),(0,d.jsx)(t.td,{children:"Percent (%)"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{children:"Field calculated through /proc/[pid]/statm"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"rss"}),(0,d.jsx)(t.td,{children:"Actual memory usage (Resident Set Size)"}),(0,d.jsx)(t.td,{children:"Byte (B)"}),(0,d.jsx)(t.td,{children:"long"}),(0,d.jsx)(t.td,{children:"/proc/[pid]/status::VmRSS"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"uid"}),(0,d.jsx)(t.td,{children:"User ID or username"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"/proc/[pid]/status::Uid"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"state"}),(0,d.jsx)(t.td,{children:"Process status"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"/proc/[pid]/status::State"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"SharedMemory"}),(0,d.jsx)(t.td,{children:"Shared memory size"}),(0,d.jsx)(t.td,{children:"Byte (B)"}),(0,d.jsx)(t.td,{children:"long"}),(0,d.jsx)(t.td,{children:"Field calculated through /proc/[pid]/statm"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"openFileDescriptors"}),(0,d.jsx)(t.td,{children:"Number of file descriptors open by the process"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"Field calculated through /proc/[pid]/fd"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"vmSize"}),(0,d.jsx)(t.td,{children:"Virtual memory size"}),(0,d.jsx)(t.td,{children:"Byte (B)"}),(0,d.jsx)(t.td,{children:"long"}),(0,d.jsx)(t.td,{children:"/proc/[pid]/status\uC758 VmSize"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"threads"}),(0,d.jsx)(t.td,{children:"Number of threads created by the process"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"/proc/[pid]/status\uC758 Threads"})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h4",children:[(0,d.jsx)(t.h4,{id:"linux-process-status-in-the-kubernetes-environment",children:"Linux process status in the Kubernetes environment"}),(0,d.jsxs)(t.p,{children:["On Linux, the ",(0,d.jsx)(t.code,{children:"State"})," field in the ",(0,d.jsx)(t.em,{children:"/proc/[pid]/status"})," file displays the current state of the process. The meanings of each status are as follows:"]}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Code"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Description detail"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"R (Running)"}),(0,d.jsx)(t.td,{children:"Running"}),(0,d.jsx)(t.td,{children:"The process is running or ready to run."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"S (Sleeping)"}),(0,d.jsx)(t.td,{children:"Waiting"}),(0,d.jsx)(t.td,{children:"Interruptible sleep state, waiting for an event."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"D (Disk Sleep)"}),(0,d.jsx)(t.td,{children:"Disk sleeping"}),(0,d.jsx)(t.td,{children:"Non-interruptible sleep state, waiting for an I/O operation."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"R (Zombie)"}),(0,d.jsx)(t.td,{children:"Zombie state"}),(0,d.jsx)(t.td,{children:"The process has been terminated, but the parent process has not yet collected its termination status."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"T (Stopped)"}),(0,d.jsx)(t.td,{children:"Stopped"}),(0,d.jsx)(t.td,{children:"The process is stopped by a job control signal (such as SIGSTOP) or debugger."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"t (Tracing stop)"}),(0,d.jsx)(t.td,{children:"Tracing stopped"}),(0,d.jsx)(t.td,{children:"The state in which tracing is performed by the debugger (indicated by a lowercase t)."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"X (Dead)"}),(0,d.jsx)(t.td,{children:"Dead state"}),(0,d.jsx)(t.td,{children:"The process is dead (usually invisible)."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"x (Dead)"}),(0,d.jsx)(t.td,{children:"Dead state"}),(0,d.jsx)(t.td,{children:"The kernel thread is dead (usually invisible)."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"K (WakeKill)"}),(0,d.jsx)(t.td,{children:"Forcibly terminated"}),(0,d.jsx)(t.td,{children:"Wake-up signal is ignored and immediately dead."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"W (Waking)"}),(0,d.jsx)(t.td,{children:"Waking"}),(0,d.jsx)(t.td,{children:"The process is being woken up after receiving a wake-up signal."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"I (Idle)"}),(0,d.jsx)(t.td,{children:"Idle state"}),(0,d.jsx)(t.td,{children:"Kernel thread is idle (usually invisible to user space processes)."})]})]})]}),(0,d.jsxs)(t.admonition,{type:"note",children:[(0,d.jsx)(t.mdxAdmonitionTitle,{}),(0,d.jsxs)(t.p,{children:["Because Kubernetes manages the resources of containers and nodes efficiently, many processes running in containers are actually in waiting state. As a result, most processes may be in ",(0,d.jsx)(t.code,{children:"Sleeping"})," state."]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,d.jsxs)(t.h2,{id:"agent_status_summary",children:["Agent status (",(0,d.jsx)(t.code,{children:"agent_status_summary"}),") metrics"]}),(0,d.jsx)(t.p,{children:"This category collects metrics related to agent status every 10 seconds."})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"agent_status_summary_filed",children:"Fields"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field name"}),(0,d.jsx)(t.th,{style:{textAlign:"center"},children:"Unit"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Remarks"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"inActTime"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"Millisecond(ms)"}),(0,d.jsx)(t.td,{children:"Amount of time the agent remains inactive"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"isActive"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Whether the agent is active or not"}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"true"})," / ",(0,d.jsx)(t.code,{children:"false"})]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"isRestart"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Whether the agent is restarted or not"}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"true"})," / ",(0,d.jsx)(t.code,{children:"false"})]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"lastActTime"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"Millisecond(ms)"}),(0,d.jsx)(t.td,{children:"Time when the agent was last activated"}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"0"}),": If disabled"]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"oid"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Unique IDs for each agent in the project"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"oType"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Agent type"}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"1"}),": Application agent / ",(0,d.jsx)(t.code,{children:"2"}),": See ",(0,d.jsx)(t.code,{children:"subType"})]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"startTime"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"Millisecond(ms)"}),(0,d.jsx)(t.td,{children:"Timestamp indicating the time when the agent was started"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"subType"})}),(0,d.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,d.jsx)(t.td,{children:"Agent type"}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"9"}),": Node agent / ",(0,d.jsx)(t.code,{children:"10"}),": Master agent"]})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,d.jsxs)(t.h2,{id:"kube_ingress",children:["Ingress (",(0,d.jsx)(t.code,{children:"kube_ingress"}),") metric"]}),(0,d.jsxs)(t.admonition,{type:"note",children:[(0,d.jsx)(t.mdxAdmonitionTitle,{}),(0,d.jsxs)(t.p,{children:["Kubernetes agent 1.7.13 or later is required. For more information about agent updates, see ",(0,d.jsx)(t.a,{href:"agent-update",children:"the following"}),"."]})]}),(0,d.jsx)(t.p,{children:"It is collected when monitoring metadata and the related information for Ingress resources."}),(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsxs)(t.li,{children:["\n",(0,d.jsx)(t.p,{children:"Target: Cluster project, Namespace project"}),"\n"]}),"\n",(0,d.jsxs)(t.li,{children:["\n",(0,d.jsx)(t.p,{children:"Collection interval: 30 seconds"}),"\n"]}),"\n",(0,d.jsxs)(t.li,{children:["\n",(0,d.jsx)(t.p,{children:"Statistical data: 5 minutes"}),"\n"]}),"\n"]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_ingress-tags",children:"Tags"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Tag name"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Unit"}),(0,d.jsx)(t.th,{children:"Type"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"ingressUid"})}),(0,d.jsx)(t.td,{children:"Unique ID of the Ingress resource"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"String"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"ingressName"})}),(0,d.jsx)(t.td,{children:"Name of the Ingress resource"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"String"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"ingressNamespace"})}),(0,d.jsx)(t.td,{children:"Namespace of the Ingress resource"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"String"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"creationTimeMillis"})}),(0,d.jsx)(t.td,{children:"Created time of the Ingress resource"}),(0,d.jsx)(t.td,{children:"Millisecond(ms)"}),(0,d.jsx)(t.td,{children:"Long"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"ingressClassName"})}),(0,d.jsx)(t.td,{children:"Name of the Ingress class"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"String"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"ingressLoadBalancerIps"})}),(0,d.jsx)(t.td,{children:"IP of the Ingress load balancer"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"List"})]})]})]})]}),(0,d.jsxs)(t.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(t.h3,{id:"kube_ingress-fields",children:"Fields"}),(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field name"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Unit"}),(0,d.jsx)(t.th,{children:"Type"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"host"})}),(0,d.jsxs)(t.td,{children:["Host name that the Ingress resource listens to",(0,d.jsx)("br",{})," (if ",(0,d.jsx)(t.code,{children:"*"}),", it applies to all hosts)"]}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"List"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"path"})}),(0,d.jsx)(t.td,{children:"Request path under a specific host"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"List"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"backendServiceName"})}),(0,d.jsx)(t.td,{children:"Name of the service passed to the backend"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"List"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"backendServicePort"})}),(0,d.jsx)(t.td,{children:"Port number passed to the backend"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"List"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"backendServiceUid"})}),(0,d.jsx)(t.td,{children:"URL of the service passed to the backend"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"List"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"pathType"})}),(0,d.jsxs)(t.td,{children:["Path matching method (e.g. ",(0,d.jsx)(t.code,{children:"Prefix"}),", ",(0,d.jsx)(t.code,{children:"Exact"}),")"]}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"List"})]})]})]})]})]})]})}function c(e={}){let{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(i,{...e})}):i(e)}let l={id:"metrics-kubernetes",title:"Kubernetes metrics",description:"It guides you to the metrics collected by Kubernetes.",toc_max_heading_level:2,keywords:["Metrics","Kubernetes","Kubernetes Monitoring"],isTranslationMissing:!1},h=void 0,x={},o=[{value:"Container(<code>container</code>) metric",id:"container",level:2},{value:"Tags",id:"container-tags",level:3},{value:"Fields",id:"container-fields",level:3},{value:"Kubernetes node (<code>kube_node</code>) metric",id:"kube_node",level:2},{value:"Tags",id:"kube_node-tags",level:3},{value:"Fields",id:"kube_node-fields",level:3},{value:"Kubernetes event (<code>kube_event</code>) metric",id:"kube_event",level:2},{value:"Tags",id:"kube_event-tags",level:3},{value:"Fields",id:"kube_event-fields",level:3},{value:"Kubernetes Cluster (<code>kube_stat</code>) metric",id:"kube_stat",level:2},{value:"Tags",id:"kube_stat-tags",level:3},{value:"Fields",id:"kube_stat-fields",level:3},{value:"Pod (<code>kube_pod</code>) metric",id:"kube_pod",level:2},{value:"Tags",id:"kube_pod-tags",level:3},{value:"Fields",id:"kube_pod-fields",level:3},{value:"Kubernetes Pod Statistics (<code>kube_pod_stat</code>) metric",id:"kube_pod_stat",level:2},{value:"Tags",id:"kube_pod_stat-tags",level:3},{value:"Fields",id:"kube_pod_stat-fields",level:3},{value:"Kubernetes Horizontal Pod Autoscaler (HPA) (<code>kube_hpa_stat</code>) metric",id:"kube_hpa_stat",level:2},{value:"Tags",id:"kube_hpa_stat-tags",level:3},{value:"Fields",id:"kube_hpa_stat-fields",level:3},{value:"Process (<code>kube_process</code>) metrics",id:"kube_process",level:2},{value:"Tags",id:"kube_process_stat-tags",level:3},{value:"Fields",id:"kube_process_stat-fields",level:3},{value:"Linux process status in the Kubernetes environment",id:"linux-process-status-in-the-kubernetes-environment",level:4},{value:"Agent status (<code>agent_status_summary</code>) metrics",id:"agent_status_summary",level:2},{value:"Fields",id:"agent_status_summary_filed",level:3},{value:"Ingress (<code>kube_ingress</code>) metric",id:"kube_ingress",level:2},{value:"Tags",id:"kube_ingress-tags",level:3},{value:"Fields",id:"kube_ingress-fields",level:3}];function j(e){return(0,d.jsx)(c,{})}function a(e={}){let{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(j,{...e})}):j(e)}},50065:function(e,t,r){r.d(t,{Z:function(){return c},a:function(){return i}});var s=r(67294);let d={},n=s.createContext(d);function i(e){let t=s.useContext(n);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);